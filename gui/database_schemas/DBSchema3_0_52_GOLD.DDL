--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : E:\SpreadModel\_Databases\DBSchema3_0_52b.vsd.
--    Time Created: June 30, 2005 5:01 PM.
--    Operation   : From Visio Update Database Wizard.
--    Connected data source : NADTemplate3_0_50
--    Connected server      : ACCESS
--    Connected database    : E:\SPREADMODEL\_Databases\template-3_0_50.mdb



-- Update existing table `outDailyByProductionType`.
create table `outDailyByProductionType_IM0` ( 
	`outDailyByPTID` COUNTER,
	`iteration` INTEGER,
	`day` INTEGER,
	`productionTypeID` INTEGER,
	`tsUSusc` INTEGER,
	`tsASusc` INTEGER,
	`tsULat` INTEGER,
	`tsALat` INTEGER,
	`tsUSCInf` INTEGER,
	`tsASCInf` INTEGER,
	`tsUInf` INTEGER,
	`tsAInf` INTEGER,
	`tsUNImm` INTEGER,
	`tsANImm` INTEGER,
	`tsUVImm` INTEGER,
	`tsAVImm` INTEGER,
	`tsUDest` INTEGER,
	`tsADest` INTEGER,
	`tsUNoAn` INTEGER,
	`tcUSusc` INTEGER,
	`tcASusc` INTEGER,
	`tcULat` INTEGER,
	`tcALat` INTEGER,
	`tcUSCInf` INTEGER,
	`tcASCInf` INTEGER,
	`tcUInf` INTEGER,
	`tcAInf` INTEGER,
	`tcUNImm` INTEGER,
	`tcANImm` INTEGER,
	`tcUVImm` INTEGER,
	`tcAVImm` INTEGER,
	`tcUDest` INTEGER,
	`tcADest` INTEGER,
	`tcUNoAn` INTEGER,
	`duUClin` INTEGER,
	`duAClin` INTEGER); 

insert into `outDailyByProductionType_IM0` ( `iteration`, `day`, `productionTypeID`, `tsUSusc`, `tsASusc`, `tsULat`, `tsALat`, `tsUSCInf`, `tsASCInf`, `tsUInf`, `tsAInf`, `tsUNImm`, `tsANImm`, `tsUVImm`, `tsAVImm`, `tsUDest`, `tsADest`, `tsUNoAn`, `tcUSusc`, `tcASusc`, `tcULat`, `tcALat`, `tcUSCInf`, `tcASCInf`, `tcUInf`, `tcAInf`, `tcUNImm`, `tcANImm`, `tcUVImm`, `tcAVImm`, `tcUDest`, `tcADest`, `tcUNoAn`, `duUClin`, `duAClin`) 
    select `outDailyByProductionType`.`iteration`, 
           `outDailyByProductionType`.`day`, 
           `outDailyByProductionType`.`productionTypeID`, 
           `outDailyByProductionType`.`tsUSusc`, 
           `outDailyByProductionType`.`tsASusc`, 
           `outDailyByProductionType`.`tsULat`, 
           `outDailyByProductionType`.`tsALat`, 
           `outDailyByProductionType`.`tsUSCInf`, 
           `outDailyByProductionType`.`tsASCInf`, 
           `outDailyByProductionType`.`tsUInf`, 
           `outDailyByProductionType`.`tsAInf`, 
           `outDailyByProductionType`.`tsUNImm`, 
           `outDailyByProductionType`.`tsANImm`, 
           `outDailyByProductionType`.`tsUVImm`, 
           `outDailyByProductionType`.`tsAVImm`, 
           `outDailyByProductionType`.`tsUDest`, 
           `outDailyByProductionType`.`tsADest`, 
           `outDailyByProductionType`.`tsUNoAn`, 
           `outDailyByProductionType`.`tcUSusc`, 
           `outDailyByProductionType`.`tcASusc`, 
           `outDailyByProductionType`.`tcULat`, 
           `outDailyByProductionType`.`tcALat`, 
           `outDailyByProductionType`.`tcUSCInf`, 
           `outDailyByProductionType`.`tcASCInf`, 
           `outDailyByProductionType`.`tcUInf`, 
           `outDailyByProductionType`.`tcAInf`, 
           `outDailyByProductionType`.`tcUNImm`, 
           `outDailyByProductionType`.`tcANImm`, 
           `outDailyByProductionType`.`tcUVImm`, 
           `outDailyByProductionType`.`tcAVImm`, 
           `outDailyByProductionType`.`tcUDest`, 
           `outDailyByProductionType`.`tcADest`, 
           `outDailyByProductionType`.`tcUNoAn`, 
           `outDailyByProductionType`.`duUClin`, 
           `outDailyByProductionType`.`duAClin`  
    from `outDailyByProductionType`;


alter table `outDailyByProductionType`
	drop constraint `inProductionType_outDailyByProductionType_FK1`;


drop table `outDailyByProductionType`; 


-- `outDailyByProductionType` : Table of outDailyByProductionType
-- 	`tsUSusc` : Current number of units with transition state = susceptible
-- 	Current number of units with transition state = susceptible
-- 	Current number of units with transition state = susceptible
-- 	Current number of units with transition state = susceptible
-- 	`tsASusc` : Current number of animals with units having transition state = susceptible
-- 	`tsULat` : Current number of units with transition state = latent
-- 	`tsALat` : Current number of animals with units having transition state = latent
-- 	`tsUSCInf` : Current number of units with transition state = subclinical infectious
-- 	`tsASCInf` : Current number of animals with units having transition state = subclinical infectious
-- 	`tsUInf` : Current number of units with transition state = infectious
-- 	`tsAInf` : Current number of animals with units having transition state = infectious
-- 	`tsUNImm` : Current number of units with transition state = natural immune
-- 	`tsANImm` : Current number of animals with units having transition state = natural immune
-- 	`tsUVImm` : Current number of units with transition state = vaccine immune
-- 	`tsAVImm` : Current number of animals with units having transition state = vaccine immune
-- 	`tsUDest` : Current number of units with transition state = destroyed
-- 	`tsADest` : Current number of animals with units having transition state = destroyed
-- 	`tsUNoAn` : Current number of units with transition state = no animals
-- 	`tcUSusc` : Cumulative number of units with transition state = susceptible
-- 	`tcASusc` : Cumulative number of animals with units having transition state = susceptible
-- 	`tcULat` : Cumulative number of units with transition state = latent
-- 	`tcALat` : Cumulative number of animals with units having transition state = latent
-- 	`tcUSCInf` : Cumulative number of units with transition state = subclinical infectious
-- 	`tcASCInf` : Cumulative number of animals with units having transition state = subclinical infectious
-- 	`tcUInf` : Cumulative number of units with transition state = infectious
-- 	`tcAInf` : Cumulative number of animals with units having transition state = infectious
-- 	`tcUNImm` : Cumulative number of units with transition state = natural immune
-- 	`tcANImm` : Cumulative number of animals with units having transition state = natural immune
-- 	`tcUVImm` : Cumulative number of units with transition state = vaccine immune
-- 	`tcAVImm` : Cumulative number of animals with units having transition state = vaccine immune
-- 	`tcUDest` : Cumulative number of units with transition state = destroyed
-- 	`tcADest` : Cumulative number of animals with units having transition state = destroyed
-- 	`tcUNoAn` : Cumulative number of units with transition state = no animals
-- 	`infUIni` : Cumulative number of units having infection reason = initially infected
-- 	`infAIni` : Cumulative number of animals with units having infection reason = initially infected
-- 	`infUAir` : Cumulative number of units having infection reason = airborne
-- 	`infAAir` : Cumulative number of animals with units having infection reason = airborne
-- 	`infUDir` : Cumulative number of units having infection reason = Direct contact
-- 	`infADir` : Cumulative number of animals with units having infection reason = Direct contact
-- 	`infUInd` : Cumulative number of units having infection reason = Indirect contact
-- 	`infAInd` : Cumulative number of animals with units having infection reason = indirect contact  
create table `outDailyByProductionType` ( 
	`outDailyByPTID` COUNTER,
	`iteration` INTEGER,
	`day` INTEGER,
	`productionTypeID` INTEGER,
	`tsUSusc` INTEGER,
	`tsASusc` INTEGER,
	`tsULat` INTEGER,
	`tsALat` INTEGER,
	`tsUSCInf` INTEGER,
	`tsASCInf` INTEGER,
	`tsUInf` INTEGER,
	`tsAInf` INTEGER,
	`tsUNImm` INTEGER,
	`tsANImm` INTEGER,
	`tsUVImm` INTEGER,
	`tsAVImm` INTEGER,
	`tsUDest` INTEGER,
	`tsADest` INTEGER,
	`tsUNoAn` INTEGER,
	`tcUSusc` INTEGER,
	`tcASusc` INTEGER,
	`tcULat` INTEGER,
	`tcALat` INTEGER,
	`tcUSCInf` INTEGER,
	`tcASCInf` INTEGER,
	`tcUInf` INTEGER,
	`tcAInf` INTEGER,
	`tcUNImm` INTEGER,
	`tcANImm` INTEGER,
	`tcUVImm` INTEGER,
	`tcAVImm` INTEGER,
	`tcUDest` INTEGER,
	`tcADest` INTEGER,
	`tcUNoAn` INTEGER,
	`infUIni` INTEGER,
	`infAIni` INTEGER,
	`infUAir` INTEGER,
	`infAAir` INTEGER,
	`infUDir` INTEGER,
	`infADir` INTEGER,
	`infUInd` INTEGER,
	`infAInd` INTEGER); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outDailyByProductionType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outDailyByProductionType' :
-- 	`outDailyByPTID`
-- 	`productionTypeID`


insert into `outDailyByProductionType` (`iteration`, `day`, `productionTypeID`, `tsUSusc`, `tsASusc`, `tsULat`, `tsALat`, `tsUSCInf`, `tsASCInf`, `tsUInf`, `tsAInf`, `tsUNImm`, `tsANImm`, `tsUVImm`, `tsAVImm`, `tsUDest`, `tsADest`, `tsUNoAn`, `tcUSusc`, `tcASusc`, `tcULat`, `tcALat`, `tcUSCInf`, `tcASCInf`, `tcUInf`, `tcAInf`, `tcUNImm`, `tcANImm`, `tcUVImm`, `tcAVImm`, `tcUDest`, `tcADest`, `tcUNoAn`) 
    select `outDailyByProductionType_IM0`.`iteration`, 
           `outDailyByProductionType_IM0`.`day`, 
           `outDailyByProductionType_IM0`.`productionTypeID`, 
           `outDailyByProductionType_IM0`.`tsUSusc`, 
           `outDailyByProductionType_IM0`.`tsASusc`, 
           `outDailyByProductionType_IM0`.`tsULat`, 
           `outDailyByProductionType_IM0`.`tsALat`, 
           `outDailyByProductionType_IM0`.`tsUSCInf`, 
           `outDailyByProductionType_IM0`.`tsASCInf`, 
           `outDailyByProductionType_IM0`.`tsUInf`, 
           `outDailyByProductionType_IM0`.`tsAInf`, 
           `outDailyByProductionType_IM0`.`tsUNImm`, 
           `outDailyByProductionType_IM0`.`tsANImm`, 
           `outDailyByProductionType_IM0`.`tsUVImm`, 
           `outDailyByProductionType_IM0`.`tsAVImm`, 
           `outDailyByProductionType_IM0`.`tsUDest`, 
           `outDailyByProductionType_IM0`.`tsADest`, 
           `outDailyByProductionType_IM0`.`tsUNoAn`, 
           `outDailyByProductionType_IM0`.`tcUSusc`, 
           `outDailyByProductionType_IM0`.`tcASusc`, 
           `outDailyByProductionType_IM0`.`tcULat`, 
           `outDailyByProductionType_IM0`.`tcALat`, 
           `outDailyByProductionType_IM0`.`tcUSCInf`, 
           `outDailyByProductionType_IM0`.`tcASCInf`, 
           `outDailyByProductionType_IM0`.`tcUInf`, 
           `outDailyByProductionType_IM0`.`tcAInf`, 
           `outDailyByProductionType_IM0`.`tcUNImm`, 
           `outDailyByProductionType_IM0`.`tcANImm`, 
           `outDailyByProductionType_IM0`.`tcUVImm`, 
           `outDailyByProductionType_IM0`.`tcAVImm`, 
           `outDailyByProductionType_IM0`.`tcUDest`, 
           `outDailyByProductionType_IM0`.`tcADest`, 
           `outDailyByProductionType_IM0`.`tcUNoAn`  
    from `outDailyByProductionType_IM0`;


drop table `outDailyByProductionType_IM0`; 


alter table `outDailyByProductionType`
	add constraint `outDailyEpiByProductionType_PK` primary key (`outDailyByPTID`) ; 


-- Restore foreign key constraints for existing tables
alter table `outDailyByProductionType`
	add constraint `inProductionType_outDailyByProductionType_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
