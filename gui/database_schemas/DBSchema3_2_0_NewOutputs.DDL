--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : C:\Documents and Settings\areeves\My Documents\NAADSM\DatabaseSchemas\DBSchema3_2_0.vsd.
--    Time Created: July 15, 2009 10:49 AM.
--    Operation   : From Visio Update Database Wizard.
--    Connected data source : naadsm-3_2_x
--    Connected server      : ACCESS
--    Connected database    : C:\Documents and Settings\areeves\My Documents\NAADSM\DatabaseSchemas\naadsm-3_2_x.mdb



-- Drop primary key, unique and non-unique index constraints from table `outDailyByProductionType`.
alter table `outDailyByProductionType` drop constraint `outDailyEpiByProductionType_PK`; 


-- Update existing table `outIterationByZone`.
create table `outIterationByZone_IM0` ( 
	`iteration` INTEGER,
	`zoneID` INTEGER,
	`maxZoneArea` DOUBLE,
	`maxZoneAreaDay` INTEGER,
	`finalZoneArea` DOUBLE); 

insert into `outIterationByZone_IM0` (`iteration`, `zoneID`, `maxZoneArea`, `maxZoneAreaDay`, `finalZoneArea`) 
    select `outIterationByZone`.`iteration`, 
           `outIterationByZone`.`zoneID`, 
           `outIterationByZone`.`maxZoneArea`, 
           `outIterationByZone`.`maxZoneAreaDay`, 
           `outIterationByZone`.`finalZoneArea`  
    from `outIterationByZone`;


alter table `outIterationByZone`
	drop constraint `inZone_outIterationByZone_FK1`;


drop table `outIterationByZone`; 


-- `outIterationByZone` : Table of outIterationByZone
-- 	`iteration` : iteration identifies outIterationByZone
-- 	`zoneID` : zoneID partly identifies outIterationByZone
-- 	`maxZoneArea` : maxZoneArea is of outIterationByZone
-- 	`maxZoneAreaDay` : maxZoneAreaDay is of outIterationByZone
-- 	`finalZoneArea` : finalZoneArea is of outIterationByZone
-- 	`maxZonePerimeter` : maxZonePerimeter is of outIterationByZone
-- 	`maxZonePerimeterDay` : maxZonePerimeterDay is of outIterationByZone
-- 	`finalZonePerimeter` : finalZonePerimeter is of outIterationByZone  
create table `outIterationByZone` ( 
	`iteration` INTEGER,
	`zoneID` INTEGER,
	`maxZoneArea` DOUBLE,
	`maxZoneAreaDay` INTEGER,
	`finalZoneArea` DOUBLE,
	`maxZonePerimeter` DOUBLE,
	`maxZonePerimeterDay` INTEGER,
	`finalZonePerimeter` DOUBLE); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outIterationByZone`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outIterationByZone' :
-- 	`iteration`
-- 	`zoneID`


insert into `outIterationByZone` (`iteration`, `zoneID`, `maxZoneArea`, `maxZoneAreaDay`, `finalZoneArea`) 
    select `outIterationByZone_IM0`.`iteration`, 
           `outIterationByZone_IM0`.`zoneID`, 
           `outIterationByZone_IM0`.`maxZoneArea`, 
           `outIterationByZone_IM0`.`maxZoneAreaDay`, 
           `outIterationByZone_IM0`.`finalZoneArea`  
    from `outIterationByZone_IM0`;


drop table `outIterationByZone_IM0`; 


alter table `outIterationByZone`
	add constraint `outIterationByZone_PK` primary key (`iteration`, `zoneID`) ; 


-- Update existing table `outDailyByZone`.
create table `outDailyByZone_IM0` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`zoneID` INTEGER,
	`zoneArea` DOUBLE); 

insert into `outDailyByZone_IM0` (`iteration`, `day`, `zoneID`, `zoneArea`) 
    select `outDailyByZone`.`iteration`, 
           `outDailyByZone`.`day`, 
           `outDailyByZone`.`zoneID`, 
           `outDailyByZone`.`zoneArea`  
    from `outDailyByZone`;


alter table `outDailyByZone`
	drop constraint `inSurveillanceZone_outDailyByZone_FK1`;


drop table `outDailyByZone`; 


-- `outDailyByZone` : Table of outDailyByZone
-- 	`iteration` : iteration identifies outDailyByZone
-- 	`day` : day partly identifies outDailyByZone
-- 	`zoneID` : zoneID partly identifies outDailyByZone
-- 	`zoneArea` : zoneArea is of outDailyByZone
-- 	`zonePerimeter` : zonePerimeter is of outDailyByZone  
create table `outDailyByZone` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`zoneID` INTEGER,
	`zoneArea` DOUBLE,
	`zonePerimeter` DOUBLE); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outDailyByZone`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outDailyByZone' :
-- 	`iteration`
-- 	`day`
-- 	`zoneID`


insert into `outDailyByZone` (`iteration`, `day`, `zoneID`, `zoneArea`) 
    select `outDailyByZone_IM0`.`iteration`, 
           `outDailyByZone_IM0`.`day`, 
           `outDailyByZone_IM0`.`zoneID`, 
           `outDailyByZone_IM0`.`zoneArea`  
    from `outDailyByZone_IM0`;


drop table `outDailyByZone_IM0`; 


alter table `outDailyByZone`
	add constraint `outDailyByZone_PK` primary key (`iteration`, `day`, `zoneID`) ; 


-- Update existing table `outIteration`.
create table `outIteration_IM0` ( 
	`iteration` INTEGER,
	`diseaseEnded` BIT,
	`diseaseEndDay` INTEGER,
	`outbreakEnded` BIT,
	`outbreakEndDay` INTEGER,
	`zoneFociCreated` BIT); 

insert into `outIteration_IM0` (`iteration`, `diseaseEnded`, `diseaseEndDay`, `outbreakEnded`, `outbreakEndDay`, `zoneFociCreated`) 
    select `outIteration`.`iteration`, 
           `outIteration`.`diseaseEnded`, 
           `outIteration`.`diseaseEndDay`, 
           `outIteration`.`outbreakEnded`, 
           `outIteration`.`outbreakEndDay`, 
           `outIteration`.`zoneFociCreated`  
    from `outIteration`;


drop table `outIteration`; 


-- `outIteration` : Table of outIteration
-- 	`iteration` : The iteration during which the outputs in this record were generated.  The first iteration is iteration number 1.
-- 	`diseaseEnded` : diseaseEnded is of outIteration
-- 	`diseaseEndDay` : diseaseEndDay is of outIteration
-- 	`outbreakEnded` : Indicates whether the simulated outbreak ended before the end of the iteration: see Section B2.
-- 	`outbreakEndDay` : The duration in days of the outbreak simulated in the specified iteration.
-- 	`zoneFociCreated` : zoneFociCreated is of outIteration
-- 	`deswUMax` : deswUMax is of outIteration
-- 	`deswUMaxDay` : deswUMaxDay is of outIteration
-- 	`deswAMax` : deswAMax is of outIteration
-- 	`deswAMaxDay` : deswAMaxDay is of outIteration
-- 	`deswUTimeMax` : deswUTimeMax is of outIteration
-- 	`deswUTimeAvg` : deswUTimeAvg is of outIteration
-- 	`vacwUMax` : vacwUMax is of outIteration
-- 	`vacwUMaxDay` : vacwUMaxDay is of outIteration
-- 	`vacwAMax` : vacwAMax is of outIteration
-- 	`vacwAMaxDay` : vacwAMaxDay is of outIteration
-- 	`vacwUTimeMax` : vacwUTimeMax is of outIteration
-- 	`vacwUTimeAvg` : vacwUTimeAvg is of outIteration  
create table `outIteration` ( 
	`iteration` INTEGER,
	`diseaseEnded` BIT,
	`diseaseEndDay` INTEGER,
	`outbreakEnded` BIT,
	`outbreakEndDay` INTEGER,
	`zoneFociCreated` BIT,
	`deswUMax` LONG,
	`deswUMaxDay` LONG,
	`deswAMax` DOUBLE,
	`deswAMaxDay` LONG,
	`deswUTimeMax` LONG,
	`deswUTimeAvg` DOUBLE,
	`vacwUMax` LONG,
	`vacwUMaxDay` LONG,
	`vacwAMax` DOUBLE,
	`vacwAMaxDay` LONG,
	`vacwUTimeMax` LONG,
	`vacwUTimeAvg` DOUBLE); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outIteration`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outIteration' :
-- 	`iteration`


insert into `outIteration` (`iteration`, `diseaseEnded`, `diseaseEndDay`, `outbreakEnded`, `outbreakEndDay`, `zoneFociCreated`) 
    select `outIteration_IM0`.`iteration`, 
           `outIteration_IM0`.`diseaseEnded`, 
           `outIteration_IM0`.`diseaseEndDay`, 
           `outIteration_IM0`.`outbreakEnded`, 
           `outIteration_IM0`.`outbreakEndDay`, 
           `outIteration_IM0`.`zoneFociCreated`  
    from `outIteration_IM0`;


drop table `outIteration_IM0`; 


alter table `outIteration`
	add constraint `outIteration_PK` primary key (`iteration`) ; 


-- Update existing table `outDailyByProductionType`.
create table `outDailyByProductionType_IM0` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`productionTypeID` INTEGER,
	`tsdUSusc` LONG,
	`tsdASusc` LONG,
	`tsdULat` LONG,
	`tsdALat` LONG,
	`tsdUSubc` LONG,
	`tsdASubc` LONG,
	`tsdUClin` LONG,
	`tsdAClin` LONG,
	`tsdUNImm` LONG,
	`tsdANImm` LONG,
	`tsdUVImm` LONG,
	`tsdAVImm` LONG,
	`tsdUDest` LONG,
	`tsdADest` LONG,
	`tscUSusc` LONG,
	`tscASusc` LONG,
	`tscULat` LONG,
	`tscALat` LONG,
	`tscUSubc` LONG,
	`tscASubc` LONG,
	`tscUClin` LONG,
	`tscAClin` LONG,
	`tscUNImm` LONG,
	`tscANImm` LONG,
	`tscUVImm` LONG,
	`tscAVImm` LONG,
	`tscUDest` LONG,
	`tscADest` LONG,
	`infnUAir` LONG,
	`infnAAir` LONG,
	`infnUDir` LONG,
	`infnADir` LONG,
	`infnUInd` LONG,
	`infnAInd` LONG,
	`infcUIni` LONG,
	`infcAIni` LONG,
	`infcUAir` LONG,
	`infcAAir` LONG,
	`infcUDir` LONG,
	`infcADir` LONG,
	`infcUInd` LONG,
	`infcAInd` LONG,
	`expcUDir` LONG,
	`expcADir` LONG,
	`expcUInd` LONG,
	`expcAInd` LONG,
	`trcUDirFwd` LONG,
	`trcADirFwd` LONG,
	`trcUIndFwd` LONG,
	`trcAIndFwd` LONG,
	`trcUDirpFwd` LONG,
	`trcADirpFwd` LONG,
	`trcUIndpFwd` LONG,
	`trcAIndpFwd` LONG,
	`trnUDirFwd` LONG,
	`trnADirFwd` LONG,
	`trnUIndFwd` LONG,
	`trnAIndFwd` LONG,
	`detnUClin` LONG,
	`detnAClin` LONG,
	`desnUAll` LONG,
	`desnAAll` LONG,
	`vacnUAll` LONG,
	`vacnAAll` LONG,
	`detcUClin` LONG,
	`detcAClin` LONG,
	`descUIni` LONG,
	`descAIni` LONG,
	`descUDet` LONG,
	`descADet` LONG,
	`descURing` LONG,
	`descARing` LONG,
	`vaccUIni` LONG,
	`vaccAIni` LONG,
	`vaccURing` LONG,
	`vaccARing` LONG,
	`zonnFoci` LONG,
	`zoncFoci` LONG,
	`appdUInfectious` LONG,
	`descUDirFwd` INTEGER,
	`descADirFwd` INTEGER,
	`descUIndFwd` INTEGER,
	`descAIndFwd` INTEGER); 

insert into `outDailyByProductionType_IM0` (`iteration`, `day`, `productionTypeID`, `tsdUSusc`, `tsdASusc`, `tsdULat`, `tsdALat`, `tsdUSubc`, `tsdASubc`, `tsdUClin`, `tsdAClin`, `tsdUNImm`, `tsdANImm`, `tsdUVImm`, `tsdAVImm`, `tsdUDest`, `tsdADest`, `tscUSusc`, `tscASusc`, `tscULat`, `tscALat`, `tscUSubc`, `tscASubc`, `tscUClin`, `tscAClin`, `tscUNImm`, `tscANImm`, `tscUVImm`, `tscAVImm`, `tscUDest`, `tscADest`, `infnUAir`, `infnAAir`, `infnUDir`, `infnADir`, `infnUInd`, `infnAInd`, `infcUIni`, `infcAIni`, `infcUAir`, `infcAAir`, `infcUDir`, `infcADir`, `infcUInd`, `infcAInd`, `expcUDir`, `expcADir`, `expcUInd`, `expcAInd`, `trcUDirFwd`, `trcADirFwd`, `trcUIndFwd`, `trcAIndFwd`, `trcUDirpFwd`, `trcADirpFwd`, `trcUIndpFwd`, `trcAIndpFwd`, `trnUDirFwd`, `trnADirFwd`, `trnUIndFwd`, `trnAIndFwd`, `detnUClin`, `detnAClin`, `desnUAll`, `desnAAll`, `vacnUAll`, `vacnAAll`, `detcUClin`, `detcAClin`, `descUIni`, `descAIni`, `descUDet`, `descADet`, `descURing`, `descARing`, `vaccUIni`, `vaccAIni`, `vaccURing`, `vaccARing`, `zonnFoci`, `zoncFoci`, `appdUInfectious`, `descUDirFwd`, `descADirFwd`, `descUIndFwd`, `descAIndFwd`) 
    select `outDailyByProductionType`.`iteration`, 
           `outDailyByProductionType`.`day`, 
           `outDailyByProductionType`.`productionTypeID`, 
           `outDailyByProductionType`.`tsdUSusc`, 
           `outDailyByProductionType`.`tsdASusc`, 
           `outDailyByProductionType`.`tsdULat`, 
           `outDailyByProductionType`.`tsdALat`, 
           `outDailyByProductionType`.`tsdUSubc`, 
           `outDailyByProductionType`.`tsdASubc`, 
           `outDailyByProductionType`.`tsdUClin`, 
           `outDailyByProductionType`.`tsdAClin`, 
           `outDailyByProductionType`.`tsdUNImm`, 
           `outDailyByProductionType`.`tsdANImm`, 
           `outDailyByProductionType`.`tsdUVImm`, 
           `outDailyByProductionType`.`tsdAVImm`, 
           `outDailyByProductionType`.`tsdUDest`, 
           `outDailyByProductionType`.`tsdADest`, 
           `outDailyByProductionType`.`tscUSusc`, 
           `outDailyByProductionType`.`tscASusc`, 
           `outDailyByProductionType`.`tscULat`, 
           `outDailyByProductionType`.`tscALat`, 
           `outDailyByProductionType`.`tscUSubc`, 
           `outDailyByProductionType`.`tscASubc`, 
           `outDailyByProductionType`.`tscUClin`, 
           `outDailyByProductionType`.`tscAClin`, 
           `outDailyByProductionType`.`tscUNImm`, 
           `outDailyByProductionType`.`tscANImm`, 
           `outDailyByProductionType`.`tscUVImm`, 
           `outDailyByProductionType`.`tscAVImm`, 
           `outDailyByProductionType`.`tscUDest`, 
           `outDailyByProductionType`.`tscADest`, 
           `outDailyByProductionType`.`infnUAir`, 
           `outDailyByProductionType`.`infnAAir`, 
           `outDailyByProductionType`.`infnUDir`, 
           `outDailyByProductionType`.`infnADir`, 
           `outDailyByProductionType`.`infnUInd`, 
           `outDailyByProductionType`.`infnAInd`, 
           `outDailyByProductionType`.`infcUIni`, 
           `outDailyByProductionType`.`infcAIni`, 
           `outDailyByProductionType`.`infcUAir`, 
           `outDailyByProductionType`.`infcAAir`, 
           `outDailyByProductionType`.`infcUDir`, 
           `outDailyByProductionType`.`infcADir`, 
           `outDailyByProductionType`.`infcUInd`, 
           `outDailyByProductionType`.`infcAInd`, 
           `outDailyByProductionType`.`expcUDir`, 
           `outDailyByProductionType`.`expcADir`, 
           `outDailyByProductionType`.`expcUInd`, 
           `outDailyByProductionType`.`expcAInd`, 
           `outDailyByProductionType`.`trcUDirFwd`, 
           `outDailyByProductionType`.`trcADirFwd`, 
           `outDailyByProductionType`.`trcUIndFwd`, 
           `outDailyByProductionType`.`trcAIndFwd`, 
           `outDailyByProductionType`.`trcUDirpFwd`, 
           `outDailyByProductionType`.`trcADirpFwd`, 
           `outDailyByProductionType`.`trcUIndpFwd`, 
           `outDailyByProductionType`.`trcAIndpFwd`, 
           `outDailyByProductionType`.`trnUDirFwd`, 
           `outDailyByProductionType`.`trnADirFwd`, 
           `outDailyByProductionType`.`trnUIndFwd`, 
           `outDailyByProductionType`.`trnAIndFwd`, 
           `outDailyByProductionType`.`detnUClin`, 
           `outDailyByProductionType`.`detnAClin`, 
           `outDailyByProductionType`.`desnUAll`, 
           `outDailyByProductionType`.`desnAAll`, 
           `outDailyByProductionType`.`vacnUAll`, 
           `outDailyByProductionType`.`vacnAAll`, 
           `outDailyByProductionType`.`detcUClin`, 
           `outDailyByProductionType`.`detcAClin`, 
           `outDailyByProductionType`.`descUIni`, 
           `outDailyByProductionType`.`descAIni`, 
           `outDailyByProductionType`.`descUDet`, 
           `outDailyByProductionType`.`descADet`, 
           `outDailyByProductionType`.`descURing`, 
           `outDailyByProductionType`.`descARing`, 
           `outDailyByProductionType`.`vaccUIni`, 
           `outDailyByProductionType`.`vaccAIni`, 
           `outDailyByProductionType`.`vaccURing`, 
           `outDailyByProductionType`.`vaccARing`, 
           `outDailyByProductionType`.`zonnFoci`, 
           `outDailyByProductionType`.`zoncFoci`, 
           `outDailyByProductionType`.`appdUInfectious`, 
           `outDailyByProductionType`.`descUDirFwd`, 
           `outDailyByProductionType`.`descADirFwd`, 
           `outDailyByProductionType`.`descUIndFwd`, 
           `outDailyByProductionType`.`descAIndFwd`  
    from `outDailyByProductionType`;


alter table `outDailyByProductionType`
	drop constraint `inProductionType_outDailyByProductionType_FK1`;


drop table `outDailyByProductionType`; 


create table `outDailyByProductionType` ( 
	`iteration` INTEGER,
	`productionTypeID` INTEGER,
	`day` INTEGER,
	`tsdUSusc` LONG,
	`tsdASusc` LONG,
	`tsdULat` LONG,
	`tsdALat` LONG,
	`tsdUSubc` LONG,
	`tsdASubc` LONG,
	`tsdUClin` LONG,
	`tsdAClin` LONG,
	`tsdUNImm` LONG,
	`tsdANImm` LONG,
	`tsdUVImm` LONG,
	`tsdAVImm` LONG,
	`tsdUDest` LONG,
	`tsdADest` LONG,
	`tscUSusc` LONG,
	`tscASusc` LONG,
	`tscULat` LONG,
	`tscALat` LONG,
	`tscUSubc` LONG,
	`tscASubc` LONG,
	`tscUClin` LONG,
	`tscAClin` LONG,
	`tscUNImm` LONG,
	`tscANImm` LONG,
	`tscUVImm` LONG,
	`tscAVImm` LONG,
	`tscUDest` LONG,
	`tscADest` LONG,
	`infnUAir` LONG,
	`infnAAir` LONG,
	`infnUDir` LONG,
	`infnADir` LONG,
	`infnUInd` LONG,
	`infnAInd` LONG,
	`infcUIni` LONG,
	`infcAIni` LONG,
	`infcUAir` LONG,
	`infcAAir` LONG,
	`infcUDir` LONG,
	`infcADir` LONG,
	`infcUInd` LONG,
	`infcAInd` LONG,
	`expcUDir` LONG,
	`expcADir` LONG,
	`expcUInd` LONG,
	`expcAInd` LONG,
	`trcUDirFwd` LONG,
	`trcADirFwd` LONG,
	`trcUIndFwd` LONG,
	`trcAIndFwd` LONG,
	`trcUDirpFwd` LONG,
	`trcADirpFwd` LONG,
	`trcUIndpFwd` LONG,
	`trcAIndpFwd` LONG,
	`trnUDirFwd` LONG,
	`trnADirFwd` LONG,
	`trnUIndFwd` LONG,
	`trnAIndFwd` LONG,
	`trcUDirBack` LONG,
	`trcADirBack` LONG,
	`trcUIndBack` LONG,
	`trcAIndBack` LONG,
	`trcUDirpBack` LONG,
	`trcADirpBack` LONG,
	`trcUIndpBack` LONG,
	`trcAIndpBack` LONG,
	`trnUDirBack` LONG,
	`trnADirBack` LONG,
	`trnUIndBack` LONG,
	`trnAIndBack` LONG,
	`exmcUDirFwd` LONG,
	`exmcADirFwd` LONG,
	`exmcUIndFwd` LONG,
	`exmcAIndFwd` LONG,
	`exmcUDirBack` LONG,
	`exmcADirBack` LONG,
	`exmcUIndBack` LONG,
	`exmcAIndBack` LONG,
	`exmnUAll` LONG,
	`exmnAAll` LONG,
	`tstcUDirFwd` LONG,
	`tstcADirFwd` LONG,
	`tstcUIndFwd` LONG,
	`tstcAIndFwd` LONG,
	`tstcUDirBack` LONG,
	`tstcADirBack` LONG,
	`tstcUIndBack` LONG,
	`tstcAIndBack` LONG,
	`tstcUTruePos` LONG,
	`tstcATruePos` LONG,
	`tstnUTruePos` LONG,
	`tstnATruePos` LONG,
	`tstcUTrueNeg` LONG,
	`tstcATrueNeg` LONG,
	`tstnUTrueNeg` LONG,
	`tstnATrueNeg` LONG,
	`tstcUFalsePos` LONG,
	`tstcAFalsePos` LONG,
	`tstnUFalsePos` LONG,
	`tstnAFalsePos` LONG,
	`tstcUFalseNeg` LONG,
	`tstcAFalseNeg` LONG,
	`tstnUFalseNeg` LONG,
	`tstnAFalseNeg` LONG,
	`detnUClin` LONG,
	`detnAClin` LONG,
	`detcUClin` LONG,
	`detcAClin` LONG,
	`detnUTest` LONG,
	`detnATest` LONG,
	`detcUTest` LONG,
	`detcATest` LONG,
	`descUIni` LONG,
	`descAIni` LONG,
	`descUDet` LONG,
	`descADet` LONG,
	`descUDirBack` LONG,
	`descADirBack` LONG,
	`descUIndBack` LONG,
	`descAIndBack` LONG,
	`descURing` LONG,
	`descARing` LONG,
	`desnUAll` LONG,
	`desnAAll` LONG,
	`deswUAll` LONG,
	`deswAAll` LONG,
	`vaccUIni` LONG,
	`vaccAIni` LONG,
	`vaccURing` LONG,
	`vaccARing` LONG,
	`vacnUAll` LONG,
	`vacnAAll` LONG,
	`vacwUAll` LONG,
	`vacwAAll` LONG,
	`zonnFoci` LONG,
	`zoncFoci` LONG,
	`appdUInfectious` LONG,
	`descUDirFwd` INTEGER,
	`descADirFwd` INTEGER,
	`descUIndFwd` INTEGER,
	`descAIndFwd` INTEGER); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outDailyByProductionType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outDailyByProductionType' :
-- 	`iteration`
-- 	`productionTypeID`
-- 	`day`


insert into `outDailyByProductionType` (`iteration`, `productionTypeID`, `day`, `tsdUSusc`, `tsdASusc`, `tsdULat`, `tsdALat`, `tsdUSubc`, `tsdASubc`, `tsdUClin`, `tsdAClin`, `tsdUNImm`, `tsdANImm`, `tsdUVImm`, `tsdAVImm`, `tsdUDest`, `tsdADest`, `tscUSusc`, `tscASusc`, `tscULat`, `tscALat`, `tscUSubc`, `tscASubc`, `tscUClin`, `tscAClin`, `tscUNImm`, `tscANImm`, `tscUVImm`, `tscAVImm`, `tscUDest`, `tscADest`, `infnUAir`, `infnAAir`, `infnUDir`, `infnADir`, `infnUInd`, `infnAInd`, `infcUIni`, `infcAIni`, `infcUAir`, `infcAAir`, `infcUDir`, `infcADir`, `infcUInd`, `infcAInd`, `expcUDir`, `expcADir`, `expcUInd`, `expcAInd`, `trcUDirFwd`, `trcADirFwd`, `trcUIndFwd`, `trcAIndFwd`, `trcUDirpFwd`, `trcADirpFwd`, `trcUIndpFwd`, `trcAIndpFwd`, `trnUDirFwd`, `trnADirFwd`, `trnUIndFwd`, `trnAIndFwd`, `detnUClin`, `detnAClin`, `detcUClin`, `detcAClin`, `descUIni`, `descAIni`, `descUDet`, `descADet`, `descURing`, `descARing`, `desnUAll`, `desnAAll`, `vaccUIni`, `vaccAIni`, `vaccURing`, `vaccARing`, `vacnUAll`, `vacnAAll`, `zonnFoci`, `zoncFoci`, `appdUInfectious`, `descUDirFwd`, `descADirFwd`, `descUIndFwd`, `descAIndFwd`) 
    select `outDailyByProductionType_IM0`.`iteration`, 
           `outDailyByProductionType_IM0`.`productionTypeID`, 
           `outDailyByProductionType_IM0`.`day`, 
           `outDailyByProductionType_IM0`.`tsdUSusc`, 
           `outDailyByProductionType_IM0`.`tsdASusc`, 
           `outDailyByProductionType_IM0`.`tsdULat`, 
           `outDailyByProductionType_IM0`.`tsdALat`, 
           `outDailyByProductionType_IM0`.`tsdUSubc`, 
           `outDailyByProductionType_IM0`.`tsdASubc`, 
           `outDailyByProductionType_IM0`.`tsdUClin`, 
           `outDailyByProductionType_IM0`.`tsdAClin`, 
           `outDailyByProductionType_IM0`.`tsdUNImm`, 
           `outDailyByProductionType_IM0`.`tsdANImm`, 
           `outDailyByProductionType_IM0`.`tsdUVImm`, 
           `outDailyByProductionType_IM0`.`tsdAVImm`, 
           `outDailyByProductionType_IM0`.`tsdUDest`, 
           `outDailyByProductionType_IM0`.`tsdADest`, 
           `outDailyByProductionType_IM0`.`tscUSusc`, 
           `outDailyByProductionType_IM0`.`tscASusc`, 
           `outDailyByProductionType_IM0`.`tscULat`, 
           `outDailyByProductionType_IM0`.`tscALat`, 
           `outDailyByProductionType_IM0`.`tscUSubc`, 
           `outDailyByProductionType_IM0`.`tscASubc`, 
           `outDailyByProductionType_IM0`.`tscUClin`, 
           `outDailyByProductionType_IM0`.`tscAClin`, 
           `outDailyByProductionType_IM0`.`tscUNImm`, 
           `outDailyByProductionType_IM0`.`tscANImm`, 
           `outDailyByProductionType_IM0`.`tscUVImm`, 
           `outDailyByProductionType_IM0`.`tscAVImm`, 
           `outDailyByProductionType_IM0`.`tscUDest`, 
           `outDailyByProductionType_IM0`.`tscADest`, 
           `outDailyByProductionType_IM0`.`infnUAir`, 
           `outDailyByProductionType_IM0`.`infnAAir`, 
           `outDailyByProductionType_IM0`.`infnUDir`, 
           `outDailyByProductionType_IM0`.`infnADir`, 
           `outDailyByProductionType_IM0`.`infnUInd`, 
           `outDailyByProductionType_IM0`.`infnAInd`, 
           `outDailyByProductionType_IM0`.`infcUIni`, 
           `outDailyByProductionType_IM0`.`infcAIni`, 
           `outDailyByProductionType_IM0`.`infcUAir`, 
           `outDailyByProductionType_IM0`.`infcAAir`, 
           `outDailyByProductionType_IM0`.`infcUDir`, 
           `outDailyByProductionType_IM0`.`infcADir`, 
           `outDailyByProductionType_IM0`.`infcUInd`, 
           `outDailyByProductionType_IM0`.`infcAInd`, 
           `outDailyByProductionType_IM0`.`expcUDir`, 
           `outDailyByProductionType_IM0`.`expcADir`, 
           `outDailyByProductionType_IM0`.`expcUInd`, 
           `outDailyByProductionType_IM0`.`expcAInd`, 
           `outDailyByProductionType_IM0`.`trcUDirFwd`, 
           `outDailyByProductionType_IM0`.`trcADirFwd`, 
           `outDailyByProductionType_IM0`.`trcUIndFwd`, 
           `outDailyByProductionType_IM0`.`trcAIndFwd`, 
           `outDailyByProductionType_IM0`.`trcUDirpFwd`, 
           `outDailyByProductionType_IM0`.`trcADirpFwd`, 
           `outDailyByProductionType_IM0`.`trcUIndpFwd`, 
           `outDailyByProductionType_IM0`.`trcAIndpFwd`, 
           `outDailyByProductionType_IM0`.`trnUDirFwd`, 
           `outDailyByProductionType_IM0`.`trnADirFwd`, 
           `outDailyByProductionType_IM0`.`trnUIndFwd`, 
           `outDailyByProductionType_IM0`.`trnAIndFwd`, 
           `outDailyByProductionType_IM0`.`detnUClin`, 
           `outDailyByProductionType_IM0`.`detnAClin`, 
           `outDailyByProductionType_IM0`.`detcUClin`, 
           `outDailyByProductionType_IM0`.`detcAClin`, 
           `outDailyByProductionType_IM0`.`descUIni`, 
           `outDailyByProductionType_IM0`.`descAIni`, 
           `outDailyByProductionType_IM0`.`descUDet`, 
           `outDailyByProductionType_IM0`.`descADet`, 
           `outDailyByProductionType_IM0`.`descURing`, 
           `outDailyByProductionType_IM0`.`descARing`, 
           `outDailyByProductionType_IM0`.`desnUAll`, 
           `outDailyByProductionType_IM0`.`desnAAll`, 
           `outDailyByProductionType_IM0`.`vaccUIni`, 
           `outDailyByProductionType_IM0`.`vaccAIni`, 
           `outDailyByProductionType_IM0`.`vaccURing`, 
           `outDailyByProductionType_IM0`.`vaccARing`, 
           `outDailyByProductionType_IM0`.`vacnUAll`, 
           `outDailyByProductionType_IM0`.`vacnAAll`, 
           `outDailyByProductionType_IM0`.`zonnFoci`, 
           `outDailyByProductionType_IM0`.`zoncFoci`, 
           `outDailyByProductionType_IM0`.`appdUInfectious`, 
           `outDailyByProductionType_IM0`.`descUDirFwd`, 
           `outDailyByProductionType_IM0`.`descADirFwd`, 
           `outDailyByProductionType_IM0`.`descUIndFwd`, 
           `outDailyByProductionType_IM0`.`descAIndFwd`  
    from `outDailyByProductionType_IM0`;


drop table `outDailyByProductionType_IM0`; 


-- Update existing table `outIterationByProductionType`.
create table `outIterationByProductionType_IM0` ( 
	`iteration` INTEGER,
	`productionTypeID` INTEGER,
	`tscUSusc` LONG,
	`tscASusc` LONG,
	`tscULat` LONG,
	`tscALat` LONG,
	`tscUSubc` LONG,
	`tscASubc` LONG,
	`tscUClin` LONG,
	`tscAClin` LONG,
	`tscUNImm` LONG,
	`tscANImm` LONG,
	`tscUVImm` LONG,
	`tscAVImm` LONG,
	`tscUDest` LONG,
	`tscADest` LONG,
	`infcUIni` LONG,
	`infcAIni` LONG,
	`infcUAir` LONG,
	`infcAAir` LONG,
	`infcUDir` LONG,
	`infcADir` LONG,
	`infcUInd` LONG,
	`infcAInd` LONG,
	`expcUDir` LONG,
	`expcADir` LONG,
	`expcUInd` LONG,
	`expcAInd` LONG,
	`trcUDirFwd` LONG,
	`trcADirFwd` LONG,
	`trcUIndFwd` LONG,
	`trcAIndFwd` LONG,
	`trcUDirpFwd` LONG,
	`trcADirpFwd` LONG,
	`trcUIndpFwd` LONG,
	`trcAIndpFwd` LONG,
	`detcUClin` LONG,
	`detcAClin` LONG,
	`descUIni` LONG,
	`descAIni` LONG,
	`descUDet` LONG,
	`descADet` LONG,
	`descURing` LONG,
	`descARing` LONG,
	`vaccUIni` LONG,
	`vaccAIni` LONG,
	`vaccURing` LONG,
	`vaccARing` LONG,
	`zoncFoci` LONG,
	`firstDetection` LONG,
	`firstDestruction` LONG,
	`firstVaccination` LONG,
	`descUDirFwd` INTEGER,
	`descADirFwd` INTEGER,
	`descUIndFwd` INTEGER,
	`descAIndFwd` INTEGER); 

insert into `outIterationByProductionType_IM0` (`iteration`, `productionTypeID`, `tscUSusc`, `tscASusc`, `tscULat`, `tscALat`, `tscUSubc`, `tscASubc`, `tscUClin`, `tscAClin`, `tscUNImm`, `tscANImm`, `tscUVImm`, `tscAVImm`, `tscUDest`, `tscADest`, `infcUIni`, `infcAIni`, `infcUAir`, `infcAAir`, `infcUDir`, `infcADir`, `infcUInd`, `infcAInd`, `expcUDir`, `expcADir`, `expcUInd`, `expcAInd`, `trcUDirFwd`, `trcADirFwd`, `trcUIndFwd`, `trcAIndFwd`, `trcUDirpFwd`, `trcADirpFwd`, `trcUIndpFwd`, `trcAIndpFwd`, `detcUClin`, `detcAClin`, `descUIni`, `descAIni`, `descUDet`, `descADet`, `descURing`, `descARing`, `vaccUIni`, `vaccAIni`, `vaccURing`, `vaccARing`, `zoncFoci`, `firstDetection`, `firstDestruction`, `firstVaccination`, `descUDirFwd`, `descADirFwd`, `descUIndFwd`, `descAIndFwd`) 
    select `outIterationByProductionType`.`iteration`, 
           `outIterationByProductionType`.`productionTypeID`, 
           `outIterationByProductionType`.`tscUSusc`, 
           `outIterationByProductionType`.`tscASusc`, 
           `outIterationByProductionType`.`tscULat`, 
           `outIterationByProductionType`.`tscALat`, 
           `outIterationByProductionType`.`tscUSubc`, 
           `outIterationByProductionType`.`tscASubc`, 
           `outIterationByProductionType`.`tscUClin`, 
           `outIterationByProductionType`.`tscAClin`, 
           `outIterationByProductionType`.`tscUNImm`, 
           `outIterationByProductionType`.`tscANImm`, 
           `outIterationByProductionType`.`tscUVImm`, 
           `outIterationByProductionType`.`tscAVImm`, 
           `outIterationByProductionType`.`tscUDest`, 
           `outIterationByProductionType`.`tscADest`, 
           `outIterationByProductionType`.`infcUIni`, 
           `outIterationByProductionType`.`infcAIni`, 
           `outIterationByProductionType`.`infcUAir`, 
           `outIterationByProductionType`.`infcAAir`, 
           `outIterationByProductionType`.`infcUDir`, 
           `outIterationByProductionType`.`infcADir`, 
           `outIterationByProductionType`.`infcUInd`, 
           `outIterationByProductionType`.`infcAInd`, 
           `outIterationByProductionType`.`expcUDir`, 
           `outIterationByProductionType`.`expcADir`, 
           `outIterationByProductionType`.`expcUInd`, 
           `outIterationByProductionType`.`expcAInd`, 
           `outIterationByProductionType`.`trcUDirFwd`, 
           `outIterationByProductionType`.`trcADirFwd`, 
           `outIterationByProductionType`.`trcUIndFwd`, 
           `outIterationByProductionType`.`trcAIndFwd`, 
           `outIterationByProductionType`.`trcUDirpFwd`, 
           `outIterationByProductionType`.`trcADirpFwd`, 
           `outIterationByProductionType`.`trcUIndpFwd`, 
           `outIterationByProductionType`.`trcAIndpFwd`, 
           `outIterationByProductionType`.`detcUClin`, 
           `outIterationByProductionType`.`detcAClin`, 
           `outIterationByProductionType`.`descUIni`, 
           `outIterationByProductionType`.`descAIni`, 
           `outIterationByProductionType`.`descUDet`, 
           `outIterationByProductionType`.`descADet`, 
           `outIterationByProductionType`.`descURing`, 
           `outIterationByProductionType`.`descARing`, 
           `outIterationByProductionType`.`vaccUIni`, 
           `outIterationByProductionType`.`vaccAIni`, 
           `outIterationByProductionType`.`vaccURing`, 
           `outIterationByProductionType`.`vaccARing`, 
           `outIterationByProductionType`.`zoncFoci`, 
           `outIterationByProductionType`.`firstDetection`, 
           `outIterationByProductionType`.`firstDestruction`, 
           `outIterationByProductionType`.`firstVaccination`, 
           `outIterationByProductionType`.`descUDirFwd`, 
           `outIterationByProductionType`.`descADirFwd`, 
           `outIterationByProductionType`.`descUIndFwd`, 
           `outIterationByProductionType`.`descAIndFwd`  
    from `outIterationByProductionType`;


alter table `outIterationByProductionType`
	drop constraint `inProductionType_outIterationByProductionType_FK1`;


drop table `outIterationByProductionType`; 


create table `outIterationByProductionType` ( 
	`iteration` INTEGER,
	`productionTypeID` INTEGER,
	`tscUSusc` LONG,
	`tscASusc` LONG,
	`tscULat` LONG,
	`tscALat` LONG,
	`tscUSubc` LONG,
	`tscASubc` LONG,
	`tscUClin` LONG,
	`tscAClin` LONG,
	`tscUNImm` LONG,
	`tscANImm` LONG,
	`tscUVImm` LONG,
	`tscAVImm` LONG,
	`tscUDest` LONG,
	`tscADest` LONG,
	`infcUIni` LONG,
	`infcAIni` LONG,
	`infcUAir` LONG,
	`infcAAir` LONG,
	`infcUDir` LONG,
	`infcADir` LONG,
	`infcUInd` LONG,
	`infcAInd` LONG,
	`expcUDir` LONG,
	`expcADir` LONG,
	`expcUInd` LONG,
	`expcAInd` LONG,
	`trcUDirFwd` LONG,
	`trcADirFwd` LONG,
	`trcUIndFwd` LONG,
	`trcAIndFwd` LONG,
	`trcUDirpFwd` LONG,
	`trcADirpFwd` LONG,
	`trcUIndpFwd` LONG,
	`trcAIndpFwd` LONG,
	`trcUDirBack` LONG,
	`trcADirBack` LONG,
	`trcUIndBack` LONG,
	`trcAIndBack` LONG,
	`trcUDirpBack` LONG,
	`trcADirpBack` LONG,
	`trcUIndpBack` LONG,
	`trcAIndpBack` LONG,
	`exmcUDirFwd` LONG,
	`exmcADirFwd` LONG,
	`exmcUIndFwd` LONG,
	`exmcAIndFwd` LONG,
	`exmcUDirBack` LONG,
	`exmcADirBack` LONG,
	`exmcUIndBack` LONG,
	`exmcAIndBack` LONG,
	`tstcUDirFwd` LONG,
	`tstcADirFwd` LONG,
	`tstcUIndFwd` LONG,
	`tstcAIndFwd` LONG,
	`tstcUDirBack` LONG,
	`tstcADirBack` LONG,
	`tstcUIndBack` LONG,
	`tstcAIndBack` LONG,
	`tstcUTruePos` LONG,
	`tstcATruePos` LONG,
	`tstcUTrueNeg` LONG,
	`tstcATrueNeg` LONG,
	`tstcUFalsePos` LONG,
	`tstcAFalsePos` LONG,
	`tstcUFalseNeg` LONG,
	`tstcAFalseNeg` LONG,
	`detcUClin` LONG,
	`detcAClin` LONG,
	`detcUTest` LONG,
	`detcATest` LONG,
	`descUIni` LONG,
	`descAIni` LONG,
	`descUDet` LONG,
	`descADet` LONG,
	`descUDirBack` LONG,
	`descADirBack` LONG,
	`descUIndBack` LONG,
	`descAIndBack` LONG,
	`descURing` LONG,
	`descARing` LONG,
	`deswUMax` LONG,
	`deswAMax` DOUBLE,
	`deswUMaxDay` LONG,
	`deswAMaxDay` LONG,
	`deswUTimeMax` LONG,
	`deswUTimeAvg` DOUBLE,
	`deswUDaysInQueue` DOUBLE,
	`deswADaysInQueue` DOUBLE,
	`vaccUIni` LONG,
	`vaccAIni` LONG,
	`vaccURing` LONG,
	`vaccARing` LONG,
	`vacwUMax` LONG,
	`vacwAMax` DOUBLE,
	`vacwUMaxDay` LONG,
	`vacwAMaxDay` LONG,
	`vacwUTimeMax` LONG,
	`vacwUTimeAvg` DOUBLE,
	`vacwUDaysInQueue` DOUBLE,
	`vacwADaysInQueue` DOUBLE,
	`zoncFoci` LONG,
	`firstDetection` LONG,
	`firstDestruction` LONG,
	`firstVaccination` LONG,
	`descUDirFwd` INTEGER,
	`descADirFwd` INTEGER,
	`descUIndFwd` INTEGER,
	`descAIndFwd` INTEGER); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`outIterationByProductionType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'outIterationByProductionType' :
-- 	`iteration`
-- 	`productionTypeID`


insert into `outIterationByProductionType` (`iteration`, `productionTypeID`, `tscUSusc`, `tscASusc`, `tscULat`, `tscALat`, `tscUSubc`, `tscASubc`, `tscUClin`, `tscAClin`, `tscUNImm`, `tscANImm`, `tscUVImm`, `tscAVImm`, `tscUDest`, `tscADest`, `infcUIni`, `infcAIni`, `infcUAir`, `infcAAir`, `infcUDir`, `infcADir`, `infcUInd`, `infcAInd`, `expcUDir`, `expcADir`, `expcUInd`, `expcAInd`, `trcUDirFwd`, `trcADirFwd`, `trcUIndFwd`, `trcAIndFwd`, `trcUDirpFwd`, `trcADirpFwd`, `trcUIndpFwd`, `trcAIndpFwd`, `detcUClin`, `detcAClin`, `descUIni`, `descAIni`, `descUDet`, `descADet`, `descURing`, `descARing`, `vaccUIni`, `vaccAIni`, `vaccURing`, `vaccARing`, `zoncFoci`, `firstDetection`, `firstDestruction`, `firstVaccination`, `descUDirFwd`, `descADirFwd`, `descUIndFwd`, `descAIndFwd`) 
    select `outIterationByProductionType_IM0`.`iteration`, 
           `outIterationByProductionType_IM0`.`productionTypeID`, 
           `outIterationByProductionType_IM0`.`tscUSusc`, 
           `outIterationByProductionType_IM0`.`tscASusc`, 
           `outIterationByProductionType_IM0`.`tscULat`, 
           `outIterationByProductionType_IM0`.`tscALat`, 
           `outIterationByProductionType_IM0`.`tscUSubc`, 
           `outIterationByProductionType_IM0`.`tscASubc`, 
           `outIterationByProductionType_IM0`.`tscUClin`, 
           `outIterationByProductionType_IM0`.`tscAClin`, 
           `outIterationByProductionType_IM0`.`tscUNImm`, 
           `outIterationByProductionType_IM0`.`tscANImm`, 
           `outIterationByProductionType_IM0`.`tscUVImm`, 
           `outIterationByProductionType_IM0`.`tscAVImm`, 
           `outIterationByProductionType_IM0`.`tscUDest`, 
           `outIterationByProductionType_IM0`.`tscADest`, 
           `outIterationByProductionType_IM0`.`infcUIni`, 
           `outIterationByProductionType_IM0`.`infcAIni`, 
           `outIterationByProductionType_IM0`.`infcUAir`, 
           `outIterationByProductionType_IM0`.`infcAAir`, 
           `outIterationByProductionType_IM0`.`infcUDir`, 
           `outIterationByProductionType_IM0`.`infcADir`, 
           `outIterationByProductionType_IM0`.`infcUInd`, 
           `outIterationByProductionType_IM0`.`infcAInd`, 
           `outIterationByProductionType_IM0`.`expcUDir`, 
           `outIterationByProductionType_IM0`.`expcADir`, 
           `outIterationByProductionType_IM0`.`expcUInd`, 
           `outIterationByProductionType_IM0`.`expcAInd`, 
           `outIterationByProductionType_IM0`.`trcUDirFwd`, 
           `outIterationByProductionType_IM0`.`trcADirFwd`, 
           `outIterationByProductionType_IM0`.`trcUIndFwd`, 
           `outIterationByProductionType_IM0`.`trcAIndFwd`, 
           `outIterationByProductionType_IM0`.`trcUDirpFwd`, 
           `outIterationByProductionType_IM0`.`trcADirpFwd`, 
           `outIterationByProductionType_IM0`.`trcUIndpFwd`, 
           `outIterationByProductionType_IM0`.`trcAIndpFwd`, 
           `outIterationByProductionType_IM0`.`detcUClin`, 
           `outIterationByProductionType_IM0`.`detcAClin`, 
           `outIterationByProductionType_IM0`.`descUIni`, 
           `outIterationByProductionType_IM0`.`descAIni`, 
           `outIterationByProductionType_IM0`.`descUDet`, 
           `outIterationByProductionType_IM0`.`descADet`, 
           `outIterationByProductionType_IM0`.`descURing`, 
           `outIterationByProductionType_IM0`.`descARing`, 
           `outIterationByProductionType_IM0`.`vaccUIni`, 
           `outIterationByProductionType_IM0`.`vaccAIni`, 
           `outIterationByProductionType_IM0`.`vaccURing`, 
           `outIterationByProductionType_IM0`.`vaccARing`, 
           `outIterationByProductionType_IM0`.`zoncFoci`, 
           `outIterationByProductionType_IM0`.`firstDetection`, 
           `outIterationByProductionType_IM0`.`firstDestruction`, 
           `outIterationByProductionType_IM0`.`firstVaccination`, 
           `outIterationByProductionType_IM0`.`descUDirFwd`, 
           `outIterationByProductionType_IM0`.`descADirFwd`, 
           `outIterationByProductionType_IM0`.`descUIndFwd`, 
           `outIterationByProductionType_IM0`.`descAIndFwd`  
    from `outIterationByProductionType_IM0`;


drop table `outIterationByProductionType_IM0`; 


alter table `outIterationByProductionType`
	add constraint `outDailyEpiByProductionType_PK` primary key (`productionTypeID`, `iteration`) ; 


-- Update existing table `inSelectDailyOutputs`.
create table `inSelectDailyOutputs_IM0` ( 
	`inSelectDailyOutputID` CHAR(10),
	`stsdUSusc` BIT,
	`stsdASusc` BIT,
	`stsdULat` BIT,
	`stsdALat` BIT,
	`stsdUSubc` BIT,
	`stsdASubc` BIT,
	`stsdUClin` BIT,
	`stsdAClin` BIT,
	`stsdUNImm` BIT,
	`stsdANImm` BIT,
	`stsdUVImm` BIT,
	`stsdAVImm` BIT,
	`stsdUDest` BIT,
	`stsdADest` BIT,
	`stscUSusc` BIT,
	`stscASusc` BIT,
	`stscULat` BIT,
	`stscALat` BIT,
	`stscUSubc` BIT,
	`stscASubc` BIT,
	`stscUClin` BIT,
	`stscAClin` BIT,
	`stscUNImm` BIT,
	`stscANImm` BIT,
	`stscUVImm` BIT,
	`stscAVImm` BIT,
	`stscUDest` BIT,
	`stscADest` BIT,
	`sinfnUAir` BIT,
	`sinfnAAir` BIT,
	`sinfnUDir` BIT,
	`sinfnADir` BIT,
	`sinfnUInd` BIT,
	`sinfnAInd` BIT,
	`sinfcUIni` BIT,
	`sinfcAIni` BIT,
	`sinfcUAir` BIT,
	`sinfcAAir` BIT,
	`sinfcUDir` BIT,
	`sinfcADir` BIT,
	`sinfcUInd` BIT,
	`sinfcAInd` BIT,
	`sexpcUDir` BIT,
	`sexpcADir` BIT,
	`sexpcUInd` BIT,
	`sexpcAInd` BIT,
	`strcUDirFwd` BIT,
	`strcADirFwd` BIT,
	`strcUIndFwd` BIT,
	`strcAIndFwd` BIT,
	`strcUDirpFwd` BIT,
	`strcADirpFwd` BIT,
	`strcUIndpFwd` BIT,
	`strcAIndpFwd` BIT,
	`strnUDirFwd` BIT,
	`strnADirFwd` BIT,
	`strnUIndFwd` BIT,
	`strnAIndFwd` BIT,
	`sdetnUClin` BIT,
	`sdetnAClin` BIT,
	`sdesnUAll` BIT,
	`sdesnAAll` BIT,
	`svacnUAll` BIT,
	`svacnAAll` BIT,
	`sdetcUClin` BIT,
	`sdetcAClin` BIT,
	`sdescUIni` BIT,
	`sdescAIni` BIT,
	`sdescUDet` BIT,
	`sdescADet` BIT,
	`sdescURing` BIT,
	`sdescARing` BIT,
	`svaccUIni` BIT,
	`svaccAIni` BIT,
	`svaccURing` BIT,
	`svaccARing` BIT,
	`szonnFoci` BIT,
	`szoncFoci` BIT,
	`sappdUInfectious` BIT,
	`sunitDaysInZone` BIT,
	`sanimalDaysInZone` BIT,
	`sunitsInZone` BIT,
	`sanimalsInZone` BIT,
	`sdescUDirFwd` BIT,
	`sdescADirFwd` BIT,
	`sdescUIndFwd` BIT,
	`sdescAIndFwd` BIT); 

insert into `inSelectDailyOutputs_IM0` (`inSelectDailyOutputID`, `stsdUSusc`, `stsdASusc`, `stsdULat`, `stsdALat`, `stsdUSubc`, `stsdASubc`, `stsdUClin`, `stsdAClin`, `stsdUNImm`, `stsdANImm`, `stsdUVImm`, `stsdAVImm`, `stsdUDest`, `stsdADest`, `stscUSusc`, `stscASusc`, `stscULat`, `stscALat`, `stscUSubc`, `stscASubc`, `stscUClin`, `stscAClin`, `stscUNImm`, `stscANImm`, `stscUVImm`, `stscAVImm`, `stscUDest`, `stscADest`, `sinfnUAir`, `sinfnAAir`, `sinfnUDir`, `sinfnADir`, `sinfnUInd`, `sinfnAInd`, `sinfcUIni`, `sinfcAIni`, `sinfcUAir`, `sinfcAAir`, `sinfcUDir`, `sinfcADir`, `sinfcUInd`, `sinfcAInd`, `sexpcUDir`, `sexpcADir`, `sexpcUInd`, `sexpcAInd`, `strcUDirFwd`, `strcADirFwd`, `strcUIndFwd`, `strcAIndFwd`, `strcUDirpFwd`, `strcADirpFwd`, `strcUIndpFwd`, `strcAIndpFwd`, `strnUDirFwd`, `strnADirFwd`, `strnUIndFwd`, `strnAIndFwd`, `sdetnUClin`, `sdetnAClin`, `sdesnUAll`, `sdesnAAll`, `svacnUAll`, `svacnAAll`, `sdetcUClin`, `sdetcAClin`, `sdescUIni`, `sdescAIni`, `sdescUDet`, `sdescADet`, `sdescURing`, `sdescARing`, `svaccUIni`, `svaccAIni`, `svaccURing`, `svaccARing`, `szonnFoci`, `szoncFoci`, `sappdUInfectious`, `sunitDaysInZone`, `sanimalDaysInZone`, `sunitsInZone`, `sanimalsInZone`, `sdescUDirFwd`, `sdescADirFwd`, `sdescUIndFwd`, `sdescAIndFwd`) 
    select `inSelectDailyOutputs`.`inSelectDailyOutputID`, 
           `inSelectDailyOutputs`.`stsdUSusc`, 
           `inSelectDailyOutputs`.`stsdASusc`, 
           `inSelectDailyOutputs`.`stsdULat`, 
           `inSelectDailyOutputs`.`stsdALat`, 
           `inSelectDailyOutputs`.`stsdUSubc`, 
           `inSelectDailyOutputs`.`stsdASubc`, 
           `inSelectDailyOutputs`.`stsdUClin`, 
           `inSelectDailyOutputs`.`stsdAClin`, 
           `inSelectDailyOutputs`.`stsdUNImm`, 
           `inSelectDailyOutputs`.`stsdANImm`, 
           `inSelectDailyOutputs`.`stsdUVImm`, 
           `inSelectDailyOutputs`.`stsdAVImm`, 
           `inSelectDailyOutputs`.`stsdUDest`, 
           `inSelectDailyOutputs`.`stsdADest`, 
           `inSelectDailyOutputs`.`stscUSusc`, 
           `inSelectDailyOutputs`.`stscASusc`, 
           `inSelectDailyOutputs`.`stscULat`, 
           `inSelectDailyOutputs`.`stscALat`, 
           `inSelectDailyOutputs`.`stscUSubc`, 
           `inSelectDailyOutputs`.`stscASubc`, 
           `inSelectDailyOutputs`.`stscUClin`, 
           `inSelectDailyOutputs`.`stscAClin`, 
           `inSelectDailyOutputs`.`stscUNImm`, 
           `inSelectDailyOutputs`.`stscANImm`, 
           `inSelectDailyOutputs`.`stscUVImm`, 
           `inSelectDailyOutputs`.`stscAVImm`, 
           `inSelectDailyOutputs`.`stscUDest`, 
           `inSelectDailyOutputs`.`stscADest`, 
           `inSelectDailyOutputs`.`sinfnUAir`, 
           `inSelectDailyOutputs`.`sinfnAAir`, 
           `inSelectDailyOutputs`.`sinfnUDir`, 
           `inSelectDailyOutputs`.`sinfnADir`, 
           `inSelectDailyOutputs`.`sinfnUInd`, 
           `inSelectDailyOutputs`.`sinfnAInd`, 
           `inSelectDailyOutputs`.`sinfcUIni`, 
           `inSelectDailyOutputs`.`sinfcAIni`, 
           `inSelectDailyOutputs`.`sinfcUAir`, 
           `inSelectDailyOutputs`.`sinfcAAir`, 
           `inSelectDailyOutputs`.`sinfcUDir`, 
           `inSelectDailyOutputs`.`sinfcADir`, 
           `inSelectDailyOutputs`.`sinfcUInd`, 
           `inSelectDailyOutputs`.`sinfcAInd`, 
           `inSelectDailyOutputs`.`sexpcUDir`, 
           `inSelectDailyOutputs`.`sexpcADir`, 
           `inSelectDailyOutputs`.`sexpcUInd`, 
           `inSelectDailyOutputs`.`sexpcAInd`, 
           `inSelectDailyOutputs`.`strcUDirFwd`, 
           `inSelectDailyOutputs`.`strcADirFwd`, 
           `inSelectDailyOutputs`.`strcUIndFwd`, 
           `inSelectDailyOutputs`.`strcAIndFwd`, 
           `inSelectDailyOutputs`.`strcUDirpFwd`, 
           `inSelectDailyOutputs`.`strcADirpFwd`, 
           `inSelectDailyOutputs`.`strcUIndpFwd`, 
           `inSelectDailyOutputs`.`strcAIndpFwd`, 
           `inSelectDailyOutputs`.`strnUDirFwd`, 
           `inSelectDailyOutputs`.`strnADirFwd`, 
           `inSelectDailyOutputs`.`strnUIndFwd`, 
           `inSelectDailyOutputs`.`strnAIndFwd`, 
           `inSelectDailyOutputs`.`sdetnUClin`, 
           `inSelectDailyOutputs`.`sdetnAClin`, 
           `inSelectDailyOutputs`.`sdesnUAll`, 
           `inSelectDailyOutputs`.`sdesnAAll`, 
           `inSelectDailyOutputs`.`svacnUAll`, 
           `inSelectDailyOutputs`.`svacnAAll`, 
           `inSelectDailyOutputs`.`sdetcUClin`, 
           `inSelectDailyOutputs`.`sdetcAClin`, 
           `inSelectDailyOutputs`.`sdescUIni`, 
           `inSelectDailyOutputs`.`sdescAIni`, 
           `inSelectDailyOutputs`.`sdescUDet`, 
           `inSelectDailyOutputs`.`sdescADet`, 
           `inSelectDailyOutputs`.`sdescURing`, 
           `inSelectDailyOutputs`.`sdescARing`, 
           `inSelectDailyOutputs`.`svaccUIni`, 
           `inSelectDailyOutputs`.`svaccAIni`, 
           `inSelectDailyOutputs`.`svaccURing`, 
           `inSelectDailyOutputs`.`svaccARing`, 
           `inSelectDailyOutputs`.`szonnFoci`, 
           `inSelectDailyOutputs`.`szoncFoci`, 
           `inSelectDailyOutputs`.`sappdUInfectious`, 
           `inSelectDailyOutputs`.`sunitDaysInZone`, 
           `inSelectDailyOutputs`.`sanimalDaysInZone`, 
           `inSelectDailyOutputs`.`sunitsInZone`, 
           `inSelectDailyOutputs`.`sanimalsInZone`, 
           `inSelectDailyOutputs`.`sdescUDirFwd`, 
           `inSelectDailyOutputs`.`sdescADirFwd`, 
           `inSelectDailyOutputs`.`sdescUIndFwd`, 
           `inSelectDailyOutputs`.`sdescAIndFwd`  
    from `inSelectDailyOutputs`;


drop table `inSelectDailyOutputs`; 


    
create table `inSelectDailyOutputs` ( 
	`inSelectDailyOutputID` CHAR(10),
	`stsdUSusc` BIT,
	`stsdASusc` BIT,
	`stsdULat` BIT,
	`stsdALat` BIT,
	`stsdUSubc` BIT,
	`stsdASubc` BIT,
	`stsdUClin` BIT,
	`stsdAClin` BIT,
	`stsdUNImm` BIT,
	`stsdANImm` BIT,
	`stsdUVImm` BIT,
	`stsdAVImm` BIT,
	`stsdUDest` BIT,
	`stsdADest` BIT,
	`stscUSusc` BIT,
	`stscASusc` BIT,
	`stscULat` BIT,
	`stscALat` BIT,
	`stscUSubc` BIT,
	`stscASubc` BIT,
	`stscUClin` BIT,
	`stscAClin` BIT,
	`stscUNImm` BIT,
	`stscANImm` BIT,
	`stscUVImm` BIT,
	`stscAVImm` BIT,
	`stscUDest` BIT,
	`stscADest` BIT,
	`sinfnUAir` BIT,
	`sinfnAAir` BIT,
	`sinfnUDir` BIT,
	`sinfnADir` BIT,
	`sinfnUInd` BIT,
	`sinfnAInd` BIT,
	`sinfcUIni` BIT,
	`sinfcAIni` BIT,
	`sinfcUAir` BIT,
	`sinfcAAir` BIT,
	`sinfcUDir` BIT,
	`sinfcADir` BIT,
	`sinfcUInd` BIT,
	`sinfcAInd` BIT,
	`sexpcUDir` BIT,
	`sexpcADir` BIT,
	`sexpcUInd` BIT,
	`sexpcAInd` BIT,
	`strcUDirFwd` BIT,
	`strcADirFwd` BIT,
	`strcUIndFwd` BIT,
	`strcAIndFwd` BIT,
	`strcUDirpFwd` BIT,
	`strcADirpFwd` BIT,
	`strcUIndpFwd` BIT,
	`strcAIndpFwd` BIT,
	`strnUDirFwd` BIT,
	`strnADirFwd` BIT,
	`strnUIndFwd` BIT,
	`strnAIndFwd` BIT,
	`strcUDirBack` BIT,
	`strcADirBack` BIT,
	`strcUIndBack` BIT,
	`strcAIndBack` BIT,
	`strcUDirpBack` BIT,
	`strcADirpBack` BIT,
	`strcUIndpBack` BIT,
	`strcAIndpBack` BIT,
	`strnUDirBack` BIT,
	`strnADirBack` BIT,
	`strnUIndBack` BIT,
	`strnAIndBack` BIT,
	`sexmcUDirFwd` BIT,
	`sexmcADirFwd` BIT,
	`sexmcUIndFwd` BIT,
	`sexmcAIndFwd` BIT,
	`sexmcUDirBack` BIT,
	`sexmcADirBack` BIT,
	`sexmcUIndBack` BIT,
	`sexmcAIndBack` BIT,
	`sexmnUAll` BIT,
	`sexmnAAll` BIT,
	`ststcUDirFwd` BIT,
	`ststcADirFwd` BIT,
	`ststcUIndFwd` BIT,
	`ststcAIndFwd` BIT,
	`ststcUDirBack` BIT,
	`ststcADirBack` BIT,
	`ststcUIndBack` BIT,
	`ststcAIndBack` BIT,
	`ststcUTruePos` BIT,
	`ststcATruePos` BIT,
	`ststnUTruePos` BIT,
	`ststnATruePos` BIT,
	`ststcUTrueNeg` BIT,
	`ststcATrueNeg` BIT,
	`ststnUTrueNeg` BIT,
	`ststnATrueNeg` BIT,
	`ststcUFalsePos` BIT,
	`ststcAFalsePos` BIT,
	`ststnUFalsePos` BIT,
	`ststnAFalsePos` BIT,
	`ststcUFalseNeg` BIT,
	`ststcAFalseNeg` BIT,
	`ststnUFalseNeg` BIT,
	`ststnAFalseNeg` BIT,
	`sdetcUClin` BIT,
	`sdetcAClin` BIT,
	`sdetnUClin` BIT,
	`sdetnAClin` BIT,
	`sdetnUTest` BIT,
	`sdetnATest` BIT,
	`sdetcUTest` BIT,
	`sdetcATest` BIT,
	`sdescUIni` BIT,
	`sdescAIni` BIT,
	`sdescUDet` BIT,
	`sdescADet` BIT,
	`sdescUDirBack` BIT,
	`sdescADirBack` BIT,
	`sdescUIndBack` BIT,
	`sdescAIndBack` BIT,
	`sdescURing` BIT,
	`sdescARing` BIT,
	`sdesnUAll` BIT,
	`sdesnAAll` BIT,
	`sdeswUAll` BIT,
	`sdeswAAll` BIT,
	`svaccUIni` BIT,
	`svaccAIni` BIT,
	`svaccURing` BIT,
	`svaccARing` BIT,
	`svacnUAll` BIT,
	`svacnAAll` BIT,
	`svacwUAll` BIT,
	`svacwAAll` BIT,
	`szonnFoci` BIT,
	`szoncFoci` BIT,
	`sappdUInfectious` BIT,
	`sunitDaysInZone` BIT,
	`sanimalDaysInZone` BIT,
	`sunitsInZone` BIT,
	`sanimalsInZone` BIT,
	`sdescUDirFwd` BIT,
	`sdescADirFwd` BIT,
	`sdescUIndFwd` BIT,
	`sdescAIndFwd` BIT); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inSelectDailyOutputs`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inSelectDailyOutputs' :
-- 	`inSelectDailyOutputID`


insert into `inSelectDailyOutputs` (`inSelectDailyOutputID`, `stsdUSusc`, `stsdASusc`, `stsdULat`, `stsdALat`, `stsdUSubc`, `stsdASubc`, `stsdUClin`, `stsdAClin`, `stsdUNImm`, `stsdANImm`, `stsdUVImm`, `stsdAVImm`, `stsdUDest`, `stsdADest`, `stscUSusc`, `stscASusc`, `stscULat`, `stscALat`, `stscUSubc`, `stscASubc`, `stscUClin`, `stscAClin`, `stscUNImm`, `stscANImm`, `stscUVImm`, `stscAVImm`, `stscUDest`, `stscADest`, `sinfnUAir`, `sinfnAAir`, `sinfnUDir`, `sinfnADir`, `sinfnUInd`, `sinfnAInd`, `sinfcUIni`, `sinfcAIni`, `sinfcUAir`, `sinfcAAir`, `sinfcUDir`, `sinfcADir`, `sinfcUInd`, `sinfcAInd`, `sexpcUDir`, `sexpcADir`, `sexpcUInd`, `sexpcAInd`, `strcUDirFwd`, `strcADirFwd`, `strcUIndFwd`, `strcAIndFwd`, `strcUDirpFwd`, `strcADirpFwd`, `strcUIndpFwd`, `strcAIndpFwd`, `strnUDirFwd`, `strnADirFwd`, `strnUIndFwd`, `strnAIndFwd`, `sdetcUClin`, `sdetcAClin`, `sdetnUClin`, `sdetnAClin`, `sdescUIni`, `sdescAIni`, `sdescUDet`, `sdescADet`, `sdescURing`, `sdescARing`, `sdesnUAll`, `sdesnAAll`, `svaccUIni`, `svaccAIni`, `svaccURing`, `svaccARing`, `svacnUAll`, `svacnAAll`, `szonnFoci`, `szoncFoci`, `sappdUInfectious`, `sunitDaysInZone`, `sanimalDaysInZone`, `sunitsInZone`, `sanimalsInZone`, `sdescUDirFwd`, `sdescADirFwd`, `sdescUIndFwd`, `sdescAIndFwd`) 
    select `inSelectDailyOutputs_IM0`.`inSelectDailyOutputID`, 
           `inSelectDailyOutputs_IM0`.`stsdUSusc`, 
           `inSelectDailyOutputs_IM0`.`stsdASusc`, 
           `inSelectDailyOutputs_IM0`.`stsdULat`, 
           `inSelectDailyOutputs_IM0`.`stsdALat`, 
           `inSelectDailyOutputs_IM0`.`stsdUSubc`, 
           `inSelectDailyOutputs_IM0`.`stsdASubc`, 
           `inSelectDailyOutputs_IM0`.`stsdUClin`, 
           `inSelectDailyOutputs_IM0`.`stsdAClin`, 
           `inSelectDailyOutputs_IM0`.`stsdUNImm`, 
           `inSelectDailyOutputs_IM0`.`stsdANImm`, 
           `inSelectDailyOutputs_IM0`.`stsdUVImm`, 
           `inSelectDailyOutputs_IM0`.`stsdAVImm`, 
           `inSelectDailyOutputs_IM0`.`stsdUDest`, 
           `inSelectDailyOutputs_IM0`.`stsdADest`, 
           `inSelectDailyOutputs_IM0`.`stscUSusc`, 
           `inSelectDailyOutputs_IM0`.`stscASusc`, 
           `inSelectDailyOutputs_IM0`.`stscULat`, 
           `inSelectDailyOutputs_IM0`.`stscALat`, 
           `inSelectDailyOutputs_IM0`.`stscUSubc`, 
           `inSelectDailyOutputs_IM0`.`stscASubc`, 
           `inSelectDailyOutputs_IM0`.`stscUClin`, 
           `inSelectDailyOutputs_IM0`.`stscAClin`, 
           `inSelectDailyOutputs_IM0`.`stscUNImm`, 
           `inSelectDailyOutputs_IM0`.`stscANImm`, 
           `inSelectDailyOutputs_IM0`.`stscUVImm`, 
           `inSelectDailyOutputs_IM0`.`stscAVImm`, 
           `inSelectDailyOutputs_IM0`.`stscUDest`, 
           `inSelectDailyOutputs_IM0`.`stscADest`, 
           `inSelectDailyOutputs_IM0`.`sinfnUAir`, 
           `inSelectDailyOutputs_IM0`.`sinfnAAir`, 
           `inSelectDailyOutputs_IM0`.`sinfnUDir`, 
           `inSelectDailyOutputs_IM0`.`sinfnADir`, 
           `inSelectDailyOutputs_IM0`.`sinfnUInd`, 
           `inSelectDailyOutputs_IM0`.`sinfnAInd`, 
           `inSelectDailyOutputs_IM0`.`sinfcUIni`, 
           `inSelectDailyOutputs_IM0`.`sinfcAIni`, 
           `inSelectDailyOutputs_IM0`.`sinfcUAir`, 
           `inSelectDailyOutputs_IM0`.`sinfcAAir`, 
           `inSelectDailyOutputs_IM0`.`sinfcUDir`, 
           `inSelectDailyOutputs_IM0`.`sinfcADir`, 
           `inSelectDailyOutputs_IM0`.`sinfcUInd`, 
           `inSelectDailyOutputs_IM0`.`sinfcAInd`, 
           `inSelectDailyOutputs_IM0`.`sexpcUDir`, 
           `inSelectDailyOutputs_IM0`.`sexpcADir`, 
           `inSelectDailyOutputs_IM0`.`sexpcUInd`, 
           `inSelectDailyOutputs_IM0`.`sexpcAInd`, 
           `inSelectDailyOutputs_IM0`.`strcUDirFwd`, 
           `inSelectDailyOutputs_IM0`.`strcADirFwd`, 
           `inSelectDailyOutputs_IM0`.`strcUIndFwd`, 
           `inSelectDailyOutputs_IM0`.`strcAIndFwd`, 
           `inSelectDailyOutputs_IM0`.`strcUDirpFwd`, 
           `inSelectDailyOutputs_IM0`.`strcADirpFwd`, 
           `inSelectDailyOutputs_IM0`.`strcUIndpFwd`, 
           `inSelectDailyOutputs_IM0`.`strcAIndpFwd`, 
           `inSelectDailyOutputs_IM0`.`strnUDirFwd`, 
           `inSelectDailyOutputs_IM0`.`strnADirFwd`, 
           `inSelectDailyOutputs_IM0`.`strnUIndFwd`, 
           `inSelectDailyOutputs_IM0`.`strnAIndFwd`, 
           `inSelectDailyOutputs_IM0`.`sdetcUClin`, 
           `inSelectDailyOutputs_IM0`.`sdetcAClin`, 
           `inSelectDailyOutputs_IM0`.`sdetnUClin`, 
           `inSelectDailyOutputs_IM0`.`sdetnAClin`, 
           `inSelectDailyOutputs_IM0`.`sdescUIni`, 
           `inSelectDailyOutputs_IM0`.`sdescAIni`, 
           `inSelectDailyOutputs_IM0`.`sdescUDet`, 
           `inSelectDailyOutputs_IM0`.`sdescADet`, 
           `inSelectDailyOutputs_IM0`.`sdescURing`, 
           `inSelectDailyOutputs_IM0`.`sdescARing`, 
           `inSelectDailyOutputs_IM0`.`sdesnUAll`, 
           `inSelectDailyOutputs_IM0`.`sdesnAAll`, 
           `inSelectDailyOutputs_IM0`.`svaccUIni`, 
           `inSelectDailyOutputs_IM0`.`svaccAIni`, 
           `inSelectDailyOutputs_IM0`.`svaccURing`, 
           `inSelectDailyOutputs_IM0`.`svaccARing`, 
           `inSelectDailyOutputs_IM0`.`svacnUAll`, 
           `inSelectDailyOutputs_IM0`.`svacnAAll`, 
           `inSelectDailyOutputs_IM0`.`szonnFoci`, 
           `inSelectDailyOutputs_IM0`.`szoncFoci`, 
           `inSelectDailyOutputs_IM0`.`sappdUInfectious`, 
           `inSelectDailyOutputs_IM0`.`sunitDaysInZone`, 
           `inSelectDailyOutputs_IM0`.`sanimalDaysInZone`, 
           `inSelectDailyOutputs_IM0`.`sunitsInZone`, 
           `inSelectDailyOutputs_IM0`.`sanimalsInZone`, 
           `inSelectDailyOutputs_IM0`.`sdescUDirFwd`, 
           `inSelectDailyOutputs_IM0`.`sdescADirFwd`, 
           `inSelectDailyOutputs_IM0`.`sdescUIndFwd`, 
           `inSelectDailyOutputs_IM0`.`sdescAIndFwd`  
    from `inSelectDailyOutputs_IM0`;


drop table `inSelectDailyOutputs_IM0`; 


alter table `inSelectDailyOutputs`
	add constraint `inSelectDailyOutput_PK` primary key (`inSelectDailyOutputID`) ; 


-- Restore foreign key constraints for existing tables
alter table `outIterationByZone`
	add constraint `inZone_outIterationByZone_FK1` foreign key (
		`zoneID`)
	 references `inZone` (
		`zoneID`); 

alter table `outDailyByZone`
	add constraint `inSurveillanceZone_outDailyByZone_FK1` foreign key (
		`zoneID`)
	 references `inZone` (
		`zoneID`); 

alter table `outDailyByProductionType`
	add constraint `inProductionType_outDailyByProductionType_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

alter table `outIterationByProductionType`
	add constraint `inProductionType_outIterationByProductionType_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

-- Add the remaining keys, constraints and indexes for the table `outDailyByProductionType`.
alter table `outDailyByProductionType`
	add constraint `outDailyEpiByProductionType_PK` primary key (`productionTypeID`, `day`, `iteration`) ; 


-- Update existing table `outDailyExposures`.
create table `outDailyExposures_IM0` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`exposure` INTEGER,
	`exposedHerdID` INTEGER,
	`exposedZoneID` INTEGER,
	`exposingHerdID` INTEGER,
	`exposingZoneID` INTEGER,
	`spreadMethodCode` CHAR(1),
	`success` BIT,
	`exposingHerdStatusCode` CHAR(1),
	`exposedHerdStatusCode` CHAR(1)); 

insert into `outDailyExposures_IM0` (`iteration`, `day`, `exposure`, `exposedHerdID`, `exposedZoneID`, `exposingHerdID`, `exposingZoneID`, `spreadMethodCode`, `success`, `exposingHerdStatusCode`, `exposedHerdStatusCode`) 
    select `outDailyExposures`.`iteration`, 
           `outDailyExposures`.`day`, 
           `outDailyExposures`.`exposure`, 
           `outDailyExposures`.`exposedHerdID`, 
           `outDailyExposures`.`exposedZoneID`, 
           `outDailyExposures`.`exposingHerdID`, 
           `outDailyExposures`.`exposingZoneID`, 
           `outDailyExposures`.`spreadMethodCode`, 
           `outDailyExposures`.`success`, 
           `outDailyExposures`.`exposingHerdStatusCode`, 
           `outDailyExposures`.`exposedHerdStatusCode`  
    from `outDailyExposures`;


alter table `outDailyExposures`
	drop constraint `dynHerd_outDailyExposures_FK1`;


alter table `outDailyExposures`
	drop constraint `dynHerd_outDailyExposures_FK2`;


alter table `outDailyExposures`
	drop constraint `readStatusCodes_outDailyExposures_FK1`;


alter table `outDailyExposures`
	drop constraint `readStatusCodes_outDailyExposures_FK2`;


alter table `outDailyExposures`
	drop constraint `readSpreadMethodCodes_outDailyExposures_FK1`;


alter table `outDailyExposures`
	drop constraint `inZone_outDailyExposures_FK1`;


alter table `outDailyExposures`
	drop constraint `inZone_outDailyExposures_FK2`;


drop table `outDailyExposures`; 


create table `outDailyExposures` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`exposure` INTEGER,
	`initiatedDay` INTEGER,
	`exposedHerdID` INTEGER,
	`exposedZoneID` INTEGER,
	`exposingHerdID` INTEGER,
	`exposingZoneID` INTEGER,
	`spreadMethodCode` CHAR(1),
	`isAdequate` BIT,
	`exposingHerdStatusCode` CHAR(1),
	`exposedHerdStatusCode` CHAR(1)); 

insert into `outDailyExposures` (`iteration`, `day`, `exposure`, `exposedHerdID`, `exposedZoneID`, `exposingHerdID`, `exposingZoneID`, `spreadMethodCode`, `isAdequate`, `exposingHerdStatusCode`, `exposedHerdStatusCode`) 
    select `outDailyExposures_IM0`.`iteration`, 
           `outDailyExposures_IM0`.`day`, 
           `outDailyExposures_IM0`.`exposure`, 
           `outDailyExposures_IM0`.`exposedHerdID`, 
           `outDailyExposures_IM0`.`exposedZoneID`, 
           `outDailyExposures_IM0`.`exposingHerdID`, 
           `outDailyExposures_IM0`.`exposingZoneID`, 
           `outDailyExposures_IM0`.`spreadMethodCode`, 
           `outDailyExposures_IM0`.`success`, 
           `outDailyExposures_IM0`.`exposingHerdStatusCode`, 
           `outDailyExposures_IM0`.`exposedHerdStatusCode`  
    from `outDailyExposures_IM0`;


drop table `outDailyExposures_IM0`; 


alter table `outDailyExposures`
	add constraint `outDailyExposures_PK` primary key (`day`, `exposure`, `iteration`) ; 


-- Restore foreign key constraints for existing tables
alter table `outDailyExposures`
	add constraint `dynHerd_outDailyExposures_FK1` foreign key (
		`exposedHerdID`)
	 references `dynHerd` (
		`herdID`); 

alter table `outDailyExposures`
	add constraint `dynHerd_outDailyExposures_FK2` foreign key (
		`exposingHerdID`)
	 references `dynHerd` (
		`herdID`); 

alter table `outDailyExposures`
	add constraint `readStatusCodes_outDailyExposures_FK1` foreign key (
		`exposingHerdStatusCode`)
	 references `readStatusCodes` (
		`statusCode`); 

alter table `outDailyExposures`
	add constraint `readStatusCodes_outDailyExposures_FK2` foreign key (
		`exposedHerdStatusCode`)
	 references `readStatusCodes` (
		`statusCode`); 

alter table `outDailyExposures`
	add constraint `readSpreadMethodCodes_outDailyExposures_FK1` foreign key (
		`spreadMethodCode`)
	 references `readSpreadMethodCodes` (
		`spreadMethodCode`); 

alter table `outDailyExposures`
	add constraint `inZone_outDailyExposures_FK1` foreign key (
		`exposedZoneID`)
	 references `inZone` (
		`zoneID`); 

alter table `outDailyExposures`
	add constraint `inZone_outDailyExposures_FK2` foreign key (
		`exposingZoneID`)
	 references `inZone` (
		`zoneID`); 


create table `readTestResultCodes` ( 
	`testResultCode` CHAR(1),
	`definition` VARCHAR(255), constraint `readTestResultCodes_PK` primary key (`testResultCode`) ); 

insert into `readTestResultCodes` ( `testResultCode`, `definition` ) values ( "P", "True positive" );
insert into `readTestResultCodes` ( `testResultCode`, `definition` ) values ( "Q", "False positive" );
insert into `readTestResultCodes` ( `testResultCode`, `definition` ) values ( "N", "True negative" );
insert into `readTestResultCodes` ( `testResultCode`, `definition` ) values ( "O", "False negative" );

-- Update existing table `outDailyEvents`.
create table `outDailyEvents_IM0` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`event` INTEGER,
	`herdID` INTEGER,
	`zoneID` INTEGER,
	`eventCode` CHAR(1),
	`newStateCode` CHAR(1),
	`traceSuccess` BIT); 

insert into `outDailyEvents_IM0` (`iteration`, `day`, `event`, `herdID`, `zoneID`, `eventCode`, `newStateCode`, `traceSuccess`) 
    select `outDailyEvents`.`iteration`, 
           `outDailyEvents`.`day`, 
           `outDailyEvents`.`event`, 
           `outDailyEvents`.`herdID`, 
           `outDailyEvents`.`zoneID`, 
           `outDailyEvents`.`eventCode`, 
           `outDailyEvents`.`newStateCode`, 
           `outDailyEvents`.`traceSuccess`  
    from `outDailyEvents`;


alter table `outDailyEvents`
	drop constraint `dynHerd_outDailyEvents_FK1`;


alter table `outDailyEvents`
	drop constraint `readEventCodes_outDailyEvents_FK1`;


alter table `outDailyEvents`
	drop constraint `readStatusCodes_outDailyEvents_FK1`;


alter table `outDailyEvents`
	drop constraint `inZone_outDailyEvents_FK1`;


drop table `outDailyEvents`; 


create table `outDailyEvents` ( 
	`iteration` INTEGER,
	`day` INTEGER,
	`event` INTEGER,
	`herdID` INTEGER,
	`zoneID` INTEGER,
	`eventCode` CHAR(1),
	`newStateCode` CHAR(1),
	`traceSuccess` BIT,
	`testResultCode` CHAR(1)); 


insert into `outDailyEvents` (`iteration`, `day`, `event`, `herdID`, `zoneID`, `eventCode`, `newStateCode`, `traceSuccess`) 
    select `outDailyEvents_IM0`.`iteration`, 
           `outDailyEvents_IM0`.`day`, 
           `outDailyEvents_IM0`.`event`, 
           `outDailyEvents_IM0`.`herdID`, 
           `outDailyEvents_IM0`.`zoneID`, 
           `outDailyEvents_IM0`.`eventCode`, 
           `outDailyEvents_IM0`.`newStateCode`, 
           `outDailyEvents_IM0`.`traceSuccess`  
    from `outDailyEvents_IM0`;


drop table `outDailyEvents_IM0`; 


alter table `outDailyEvents`
	add constraint `outDailyEvents_PK` primary key (`day`, `iteration`, `event`) ; 


-- Restore foreign key constraints for existing tables
alter table `outDailyEvents`
	add constraint `dynHerd_outDailyEvents_FK1` foreign key (
		`herdID`)
	 references `dynHerd` (
		`herdID`); 

alter table `outDailyEvents`
	add constraint `readEventCodes_outDailyEvents_FK1` foreign key (
		`eventCode`)
	 references `readEventCodes` (
		`eventCode`); 

alter table `outDailyEvents`
	add constraint `readStatusCodes_outDailyEvents_FK1` foreign key (
		`newStateCode`)
	 references `readStatusCodes` (
		`statusCode`); 

alter table `outDailyEvents`
	add constraint `inZone_outDailyEvents_FK1` foreign key (
		`zoneID`)
	 references `inZone` (
		`zoneID`); 

-- Add foreign key constraints to table `outDailyEvents`.
alter table `outDailyEvents`
	add constraint `readTestResultCodes_outDailyEvents_FK1` foreign key (
		`testResultCode`)
	 references `readTestResultCodes` (
		`testResultCode`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
