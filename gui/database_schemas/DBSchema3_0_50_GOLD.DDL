--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : E:\SpreadModel\_Databases\DBSchema3_0_50.vsd.
--    Time Created: June 18, 2005 1:14 PM.
--    Operation   : From Visio Generate Wizard.
--    Connected data source : NADTemplate3_0_50
--    Connected server      : ACCESS
--    Connected database    : E:\SPREADMODEL\_Databases\template-3_0_50.mdb



-- Create new table `inProductionTypePair`.
-- `inProductionTypePair` : Table of inProductionTypePair  
create table `inProductionTypePair` ( 
	`sourceProductionTypeID` INTEGER,
	`destProductionTypeID` INTEGER,
	`useDirectContact` BIT,
	`directContactSpreadID` INTEGER,
	`useIndirectContact` BIT,
	`indirectContactSpreadID` INTEGER,
	`useAirborneSpread` BIT,
	`airborneContactSpreadID` INTEGER, constraint `inProductionTypePairs_PK` primary key (`sourceProductionTypeID`, `destProductionTypeID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inProductionTypePair`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inProductionTypePair' :
-- 	`directContactSpreadID`
-- 	`indirectContactSpreadID`
-- 	`airborneContactSpreadID`


-- Create new table `inProductionType`.
-- `inProductionType` : Table of inProductionType  
create table `inProductionType` ( 
	`productionTypeID` COUNTER,
	`descr` VARCHAR(255),
	`proportion` INTEGER,
	`unitSizePdf` INTEGER,
	`transitionDisease` BIT,
	`latentPeriodPdfID` INTEGER,
	`subclinicalPeriodPdfID` INTEGER,
	`clinicalPeriodPdfID` INTEGER,
	`immunePeriodPdfID` INTEGER,
	`detection` BIT,
	`detProbReportVsTimeClinicalRelID` INTEGER,
	`detProbReportVsFirstDetectionRelID` INTEGER,
	`destrBasic` BIT,
	`destrRing` BIT,
	`destrRingRadius` DOUBLE,
	`destrDirect` BIT,
	`destrDirectSuccess` DOUBLE,
	`destrDirectTracePeriod` INTEGER,
	`destrIndirect` BIT,
	`destrIndirectSuccess` DOUBLE,
	`destrIndirectTracePeriod` INTEGER,
	`destrPriority` INTEGER,
	`useVaccination` BIT,
	`vaccMinTimeBetweenVaccinations` INTEGER,
	`vaccDaysToImmunity` INTEGER,
	`vaccImmunePeriodPdfID` INTEGER,
	`vaccRing` BIT,
	`vaccRingRadius` DOUBLE,
	`vaccPriority` INTEGER, constraint `inProductionType_PK` primary key (`productionTypeID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inProductionType`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inProductionType' :
-- 	`latentPeriodPdfID`
-- 	`subclinicalPeriodPdfID`
-- 	`clinicalPeriodPdfID`
-- 	`immunePeriodPdfID`
-- 	`detProbReportVsTimeClinicalRelID`
-- 	`detProbReportVsFirstDetectionRelID`
-- 	`vaccImmunePeriodPdfID`


-- Note: Access does not support default values in SQL DDL.  Default values will be created in
-- the database using DAO only if there is a connection to the Access MDB file during DDL generation.
-- Columns with default values for table 'inProductionType' :
-- 	`destrDirectTracePeriod`
-- 	`destrIndirectSuccess`


-- Create new table `inGeneral`.
-- `inGeneral` : Table of inGeneral  
create table `inGeneral` ( 
	`inGeneralID` VARCHAR(10),
	`scenarioDescr` VARCHAR(255),
	`iterations` INTEGER,
	`days` INTEGER,
	`isStochastic` BIT,
	`includeContactSpread` BIT,
	`includeAirborneSpread` BIT,
	`includeEconomics` BIT, constraint `inGeneral_PK` primary key (`inGeneralID`) ); 

-- Create new table `inDiseaseSpread`.
-- `inDiseaseSpread` : Table of inDiseaseSpread  
create table `inDiseaseSpread` ( 
	`spreadID` COUNTER,
	`spreadMethodCode` CHAR(1),
	`latentCanInfect` BIT,
	`subclinicalCanInfect` BIT,
	`contactRate` DOUBLE,
	`infectionProbability` DOUBLE,
	`distancePdfID` INTEGER,
	`movementControlRelID` INTEGER,
	`transportDelayPdfID` INTEGER,
	`probAirborneSpread1km` DOUBLE,
	`maxDistAirborneSpread` DOUBLE,
	`windDirectionStart` INTEGER,
	`windDirectionEnd` INTEGER, constraint `inProductionTypePair_PK` primary key (`spreadID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inDiseaseSpread`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inDiseaseSpread' :
-- 	`distancePdfID`
-- 	`movementControlRelID`
-- 	`transportDelayPdfID`


-- Create new table `inControlsGlobal`.
-- `inControlsGlobal` : Table of inControlsGlobal  
create table `inControlsGlobal` ( 
	`controlsGlobalID` CHAR(10),
	`includeDetection` BIT,
	`includeDestruction` BIT,
	`destrProgramDelay` INTEGER,
	`destrCapacityRelID` INTEGER,
	`destrPriorityOrder` VARCHAR(255),
	`destrReasonOrder` VARCHAR(255),
	`includeVaccination` BIT,
	`vaccDetectedUnitsBeforeStart` INTEGER,
	`vaccCapacityRelID` INTEGER,
	`vaccPriorityOrder` VARCHAR(255), constraint `inControlsGlobal_PK` primary key (`controlsGlobalID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`inControlsGlobal`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'inControlsGlobal' :
-- 	`destrCapacityRelID`
-- 	`vaccCapacityRelID`


-- Create new table `inChartDetail`.
-- `inChartDetail` : Table of inChartDetail  
create table `inChartDetail` ( 
	`pointOrder` INTEGER,
	`x` DOUBLE,
	`y` DOUBLE,
	`chartID` INTEGER, constraint `inChartDetail_PK` primary key (`pointOrder`, `chartID`) ); 

-- Create new table `inChart`.
-- `inChart` : Table of inChart  
create table `inChart` ( 
	`chartID` COUNTER,
	`fieldName` VARCHAR(50),
	`chartName` VARCHAR(150),
	`isPdf` BIT,
	`chartType` VARCHAR(20),
	`mean` DOUBLE,
	`stddev` DOUBLE,
	`a` DOUBLE,
	`c` DOUBLE,
	`b` DOUBLE,
	`xAxisUnits` VARCHAR(50),
	`yAxisUnits` VARCHAR(50), constraint `inChart_PK` primary key (`chartID`) ); 

-- Create new table `dynHerd`.
-- `dynHerd` : Table of dynHerd  
create table `dynHerd` ( 
	`herdID` COUNTER,
	`productionTypeID` INTEGER,
	`latitude` DOUBLE,
	`longitude` DOUBLE,
	`initialStateCode` CHAR(1),
	`initialSize` INTEGER,
	`finalStateCode` CHAR(1),
	`cumInfected` INTEGER,
	`cumVaccinated` INTEGER,
	`cumDestroyed` INTEGER, constraint `dynHerd_PK` primary key (`herdID`) ); 

-- Note: Access does not support the mandatory (not null) constraint in SQL DDL.
-- The mandatory constraints for table '`dynHerd`' will be created in the database using DAO
-- only if there is a connection to the Access MDB file during DDL generation.
-- Not nullable columns for table 'dynHerd' :
-- 	`productionTypeID`


-- Create new table `DBSchemaVersion`.
-- `DBSchemaVersion` : Table of DBSchemaVersion  
create table `DBSchemaVersion` ( 
	`VersionNumber` VARCHAR(255),
	`VersionDate` DATETIME,
	`VersionInfoURL` VARCHAR(255), constraint `DBSchemaVersion_PK` primary key (`VersionNumber`) ); 

-- Add the remaining keys, constraints and indexes for the table `inGeneral`.
create index `inGeneralID` on `inGeneral` (
	`inGeneralID` ASC); 


-- Add the remaining keys, constraints and indexes for the table `inChart`.
create unique index `chartNameIndex` on `inChart` (
	`chartName`); 


-- Add foreign key constraints to table `inProductionTypePair`.
alter table `inProductionTypePair`
	add constraint `inDiseaseSpread_inProductionTypePairs_FK1` foreign key (
		`directContactSpreadID`)
	 references `inDiseaseSpread` (
		`spreadID`); 

alter table `inProductionTypePair`
	add constraint `inDiseaseSpread_inProductionTypePairs_FK2` foreign key (
		`indirectContactSpreadID`)
	 references `inDiseaseSpread` (
		`spreadID`); 

alter table `inProductionTypePair`
	add constraint `inDiseaseSpread_inProductionTypePairs_FK3` foreign key (
		`airborneContactSpreadID`)
	 references `inDiseaseSpread` (
		`spreadID`); 

alter table `inProductionTypePair`
	add constraint `inProductionType_inProductionTypePairs_FK1` foreign key (
		`sourceProductionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

alter table `inProductionTypePair`
	add constraint `inProductionType_inProductionTypePairs_FK2` foreign key (
		`destProductionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 

-- Add foreign key constraints to table `inProductionType`.
alter table `inProductionType`
	add constraint `FK1` foreign key (
		`latentPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK2` foreign key (
		`subclinicalPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK4` foreign key (
		`immunePeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK3` foreign key (
		`clinicalPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK5` foreign key (
		`detProbReportVsTimeClinicalRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK6` foreign key (
		`detProbReportVsFirstDetectionRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK7` foreign key (
		`vaccImmunePeriodPdfID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `inDiseaseSpread`.
alter table `inDiseaseSpread`
	add constraint `inChart_inDiseaseSpread_FK3` foreign key (
		`transportDelayPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inProductionTypePair_FK1` foreign key (
		`distancePdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inProductionTypePair_FK3` foreign key (
		`movementControlRelID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `inControlsGlobal`.
alter table `inControlsGlobal`
	add constraint `inChart_inControlsGlobal_FK1` foreign key (
		`destrCapacityRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inControlsGlobal`
	add constraint `inChart_inControlsGlobal_FK2` foreign key (
		`vaccCapacityRelID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `inChartDetail`.
alter table `inChartDetail`
	add constraint `inChart_inChartDetail_FK1` foreign key (
		`chartID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `dynHerd`.
alter table `dynHerd`
	add constraint `inProductionType_dynHerd_FK1` foreign key (
		`productionTypeID`)
	 references `inProductionType` (
		`productionTypeID`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
