--    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD).
--    WITH MANUAL MODIFICATIONS

--    Driver Used : Microsoft Visual Studio - Microsoft Access Driver.
--    Document    : C:\Documents and Settings\apreeves\My Documents\NAADSM\DatabaseSchemas\DBSchema3_1_22-GOLD.vsd.
--    Time Created: February 02, 2009 12:16 PM.
--    Operation   : From Visio Update Database Wizard.
--    Connected data source : naadsm-3_1_x
--    Connected server      : ACCESS
--    Connected database    : C:\DOCUMENTS AND SETTINGS\APREEVES\My Documents\NAADSM\DatabaseSchemas\naadsm3_1_x.mdb



-- Create new table `outIterationByHerd`.
-- `outIterationByHerd` : Table of outIterationByHerd  
create table `outIterationByHerd` ( 
	`iteration` INTEGER,
	`herdID` INTEGER,
	`lastStatusCode` CHAR(1),
	`lastStatusDay` INTEGER,
	`lastApparentStateCode` CHAR(1),
	`lastApparentStateDay` INTEGER, constraint `outIterationByHerd_PK` primary key (`herdID`, `iteration`) ); 


-- Update existing table `inGeneral`.
create table `inGeneral_IM0` ( 
	`inGeneralID` VARCHAR(10),
	`scenarioDescr` LONGTEXT,
	`iterations` INTEGER,
	`days` INTEGER,
	`simStopReason` VARCHAR(25),
	`includeContactSpread` BIT,
	`includeAirborneSpread` BIT,
	`useAirborneExponentialDecay` BIT,
	`useWithinHerdPrevalence` BIT,
	`costTrackDestruction` BIT,
	`costTrackVaccination` BIT,
	`costTrackZoneSurveillance` BIT,
	`useFixedRandomSeed` BIT,
	`randomSeed` INTEGER,
	`saveAllDailyOutputs` BIT,
	`saveDailyOutputsForIterations` INTEGER,
	`writeDailyStatesFile` BIT,
	`dailyStatesFileName` VARCHAR(255),
	`saveDailyEvents` BIT,
	`saveDailyExposures` BIT,
	`useCustomOutputs` BIT,
	`writeNAADSMapOutput` BIT,
	`NAADSMapDirectory` VARCHAR(255)); 

insert into `inGeneral_IM0` (`inGeneralID`, `scenarioDescr`, `iterations`, `days`, `simStopReason`, `includeContactSpread`, `includeAirborneSpread`, `useAirborneExponentialDecay`, `useWithinHerdPrevalence`, `costTrackDestruction`, `costTrackVaccination`, `costTrackZoneSurveillance`, `useFixedRandomSeed`, `randomSeed`, `saveAllDailyOutputs`, `saveDailyOutputsForIterations`, `writeDailyStatesFile`, `dailyStatesFileName`, `saveDailyEvents`, `saveDailyExposures`, `useCustomOutputs`, `writeNAADSMapOutput`, `NAADSMapDirectory`) 
    select `inGeneral`.`inGeneralID`, 
           `inGeneral`.`scenarioDescr`, 
           `inGeneral`.`iterations`, 
           `inGeneral`.`days`, 
           `inGeneral`.`simStopReason`, 
           `inGeneral`.`includeContactSpread`, 
           `inGeneral`.`includeAirborneSpread`, 
           `inGeneral`.`useAirborneExponentialDecay`, 
           `inGeneral`.`useWithinHerdPrevalence`, 
           `inGeneral`.`costTrackDestruction`, 
           `inGeneral`.`costTrackVaccination`, 
           `inGeneral`.`costTrackZoneSurveillance`, 
           `inGeneral`.`useFixedRandomSeed`, 
           `inGeneral`.`randomSeed`, 
           `inGeneral`.`saveAllDailyOutputs`, 
           `inGeneral`.`saveDailyOutputsForIterations`, 
           `inGeneral`.`writeDailyStatesFile`, 
           `inGeneral`.`dailyStatesFileName`, 
           `inGeneral`.`saveDailyEvents`, 
           `inGeneral`.`saveDailyExposures`, 
           `inGeneral`.`useCustomOutputs`, 
           `inGeneral`.`writeNAADSMapOutput`, 
           `inGeneral`.`NAADSMapDirectory`  
    from `inGeneral`;


drop table `inGeneral`; 

create table `inGeneral` ( 
	`inGeneralID` VARCHAR(10),
	`scenarioDescr` LONGTEXT,
	`iterations` INTEGER,
	`days` INTEGER,
	`simStopReason` VARCHAR(25),
	`includeContactSpread` BIT,
	`includeAirborneSpread` BIT,
	`useAirborneExponentialDecay` BIT,
	`useWithinHerdPrevalence` BIT,
	`costTrackDestruction` BIT,
	`costTrackVaccination` BIT,
	`costTrackZoneSurveillance` BIT,
	`useFixedRandomSeed` BIT,
	`randomSeed` INTEGER,
	`saveAllDailyOutputs` BIT,
	`saveDailyOutputsForIterations` INTEGER,
	`writeDailyStatesFile` BIT,
	`dailyStatesFileName` VARCHAR(255),
	`saveDailyEvents` BIT,
	`saveDailyExposures` BIT,
	`saveIterationOutputsForHerds` BIT,
	`useCustomOutputs` BIT,
	`writeNAADSMapOutput` BIT,
	`NAADSMapDirectory` VARCHAR(255)); 

insert into `inGeneral` (`inGeneralID`, `scenarioDescr`, `iterations`, `days`, `simStopReason`, `includeContactSpread`, `includeAirborneSpread`, `useAirborneExponentialDecay`, `useWithinHerdPrevalence`, `costTrackDestruction`, `costTrackVaccination`, `costTrackZoneSurveillance`, `useFixedRandomSeed`, `randomSeed`, `saveAllDailyOutputs`, `saveDailyOutputsForIterations`, `writeDailyStatesFile`, `dailyStatesFileName`, `saveDailyEvents`, `saveDailyExposures`, `useCustomOutputs`, `writeNAADSMapOutput`, `NAADSMapDirectory`) 
    select `inGeneral_IM0`.`inGeneralID`, 
           `inGeneral_IM0`.`scenarioDescr`, 
           `inGeneral_IM0`.`iterations`, 
           `inGeneral_IM0`.`days`, 
           `inGeneral_IM0`.`simStopReason`, 
           `inGeneral_IM0`.`includeContactSpread`, 
           `inGeneral_IM0`.`includeAirborneSpread`, 
           `inGeneral_IM0`.`useAirborneExponentialDecay`, 
           `inGeneral_IM0`.`useWithinHerdPrevalence`, 
           `inGeneral_IM0`.`costTrackDestruction`, 
           `inGeneral_IM0`.`costTrackVaccination`, 
           `inGeneral_IM0`.`costTrackZoneSurveillance`, 
           `inGeneral_IM0`.`useFixedRandomSeed`, 
           `inGeneral_IM0`.`randomSeed`, 
           `inGeneral_IM0`.`saveAllDailyOutputs`, 
           `inGeneral_IM0`.`saveDailyOutputsForIterations`, 
           `inGeneral_IM0`.`writeDailyStatesFile`, 
           `inGeneral_IM0`.`dailyStatesFileName`, 
           `inGeneral_IM0`.`saveDailyEvents`, 
           `inGeneral_IM0`.`saveDailyExposures`, 
           `inGeneral_IM0`.`useCustomOutputs`, 
           `inGeneral_IM0`.`writeNAADSMapOutput`, 
           `inGeneral_IM0`.`NAADSMapDirectory`  
    from `inGeneral_IM0`;


drop table `inGeneral_IM0`; 


alter table `inGeneral`
	add constraint `inGeneral_PK` primary key (`inGeneralID`) ; 


create index `inGeneralID` on `inGeneral` (
	`inGeneralID` ASC); 


update `inGeneral` set `saveIterationOutputsForHerds` = FALSE;


-- Update existing table `inChart`.
create table `inChart_IM0` ( 
	`chartID` COUNTER,
	`fieldName` VARCHAR(50),
	`chartName` VARCHAR(150),
	`isPdf` BIT,
	`chartType` VARCHAR(20),
	`mean` DOUBLE,
	`stddev` DOUBLE,
	`min` DOUBLE,
	`mode` DOUBLE,
	`max` DOUBLE,
	`alpha` DOUBLE,
	`alpha2` DOUBLE,
	`beta` DOUBLE,
	`location` DOUBLE,
	`scale` DOUBLE,
	`shape` DOUBLE,
	`xAxisUnits` VARCHAR(50),
	`yAxisUnits` VARCHAR(50),
	`notes` LONGTEXT); 

insert into `inChart_IM0` ( `chartID`, `fieldName`, `chartName`, `isPdf`, `chartType`, `mean`, `stddev`, `min`, `mode`, `max`, `alpha`, `alpha2`, `beta`, `location`, `scale`, `shape`, `xAxisUnits`, `yAxisUnits`, `notes`) 
    select `inChart`.`chartID`, 
           `inChart`.`fieldName`, 
           `inChart`.`chartName`, 
           `inChart`.`isPdf`, 
           `inChart`.`chartType`, 
           `inChart`.`mean`, 
           `inChart`.`stddev`, 
           `inChart`.`min`, 
           `inChart`.`mode`, 
           `inChart`.`max`, 
           `inChart`.`alpha`, 
           `inChart`.`alpha2`, 
           `inChart`.`beta`, 
           `inChart`.`location`, 
           `inChart`.`scale`, 
           `inChart`.`shape`, 
           `inChart`.`xAxisUnits`, 
           `inChart`.`yAxisUnits`, 
           `inChart`.`notes`  
    from `inChart`;


alter table `inChartDetail`
	drop constraint `inChart_inChartDetail_FK1`;


alter table `inControlsGlobal`
	drop constraint `inChart_inControlsGlobal_FK1`;


alter table `inControlsGlobal`
	drop constraint `inChart_inControlsGlobal_FK2`;


alter table `inDiseaseSpread`
	drop constraint `inChart_inDiseaseSpread_FK3`;


alter table `inDiseaseSpread`
	drop constraint `inChart_inProductionTypePair_FK1`;


alter table `inDiseaseSpread`
	drop constraint `inChart_inProductionTypePair_FK3`;


alter table `inProductionType`
	drop constraint `FK1`;


alter table `inProductionType`
	drop constraint `FK2`;


alter table `inProductionType`
	drop constraint `FK4`;


alter table `inProductionType`
	drop constraint `inChart_inProductionType_FK3`;


alter table `inProductionType`
	drop constraint `inChart_inProductionType_FK5`;


alter table `inProductionType`
	drop constraint `inChart_inProductionType_FK6`;


alter table `inProductionType`
	drop constraint `inChart_inProductionType_FK7`;


alter table `inZoneProductionTypePair`
	drop constraint `inChart_inZoneProductionTypePair_FK1`;


alter table `inZoneProductionTypePair`
	drop constraint `inChart_inZoneProductionTypePair_FK2`;


alter table `inProductionType`
	drop constraint `inChart_inProductionType_FK8`;


drop table `inChart`; 

create table `inChart` ( 
	`chartID` COUNTER,
	`fieldName` VARCHAR(50),
	`chartName` VARCHAR(150),
	`isPdf` BIT,
	`chartType` VARCHAR(20),
	`mean` DOUBLE,
	`stddev` DOUBLE,
	`min` DOUBLE,
	`mode` DOUBLE,
	`max` DOUBLE,
	`alpha` DOUBLE,
	`alpha2` DOUBLE,
	`beta` DOUBLE,
	`location` DOUBLE,
	`scale` DOUBLE,
	`shape` DOUBLE,
	`n` INTEGER,
	`p` DOUBLE,
	`m` INTEGER,
	`d` INTEGER,
	`dMin` INTEGER,
	`dMax` INTEGER,
	`theta` DOUBLE,
	`a` DOUBLE,
	`s` INTEGER,
	`xAxisUnits` VARCHAR(50),
	`yAxisUnits` VARCHAR(50),
	`notes` LONGTEXT); 

insert into `inChart` ( `chartID`, `fieldName`, `chartName`, `isPdf`, `chartType`, `mean`, `stddev`, `min`, `mode`, `max`, `alpha`, `alpha2`, `beta`, `location`, `scale`, `shape`, `xAxisUnits`, `yAxisUnits`, `notes`) 
    select `inChart_IM0`.`chartID`, 
           `inChart_IM0`.`fieldName`, 
           `inChart_IM0`.`chartName`, 
           `inChart_IM0`.`isPdf`, 
           `inChart_IM0`.`chartType`, 
           `inChart_IM0`.`mean`, 
           `inChart_IM0`.`stddev`, 
           `inChart_IM0`.`min`, 
           `inChart_IM0`.`mode`, 
           `inChart_IM0`.`max`, 
           `inChart_IM0`.`alpha`, 
           `inChart_IM0`.`alpha2`, 
           `inChart_IM0`.`beta`, 
           `inChart_IM0`.`location`, 
           `inChart_IM0`.`scale`, 
           `inChart_IM0`.`shape`, 
           `inChart_IM0`.`xAxisUnits`, 
           `inChart_IM0`.`yAxisUnits`, 
           `inChart_IM0`.`notes`  
    from `inChart_IM0`;


drop table `inChart_IM0`; 


alter table `inChart`
	add constraint `inChart_PK` primary key (`chartID`) ; 


create unique index `chartNameIndex` on `inChart` (
	`chartName`); 


-- Restore foreign key constraints for existing tables
alter table `inChartDetail`
	add constraint `inChart_inChartDetail_FK1` foreign key (
		`chartID`)
	 references `inChart` (
		`chartID`); 

alter table `inControlsGlobal`
	add constraint `inChart_inControlsGlobal_FK1` foreign key (
		`destrCapacityRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inControlsGlobal`
	add constraint `inChart_inControlsGlobal_FK2` foreign key (
		`vaccCapacityRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inDiseaseSpread_FK3` foreign key (
		`transportDelayPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inProductionTypePair_FK1` foreign key (
		`distancePdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inDiseaseSpread`
	add constraint `inChart_inProductionTypePair_FK3` foreign key (
		`movementControlRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK1` foreign key (
		`disLatentPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK2` foreign key (
		`disSubclinicalPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `FK4` foreign key (
		`disImmunePeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK3` foreign key (
		`disClinicalPeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK5` foreign key (
		`detProbObsVsTimeClinicalRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK6` foreign key (
		`detProbReportVsFirstDetectionRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK7` foreign key (
		`vaccImmunePeriodPdfID`)
	 references `inChart` (
		`chartID`); 

alter table `inZoneProductionTypePair`
	add constraint `inChart_inZoneProductionTypePair_FK1` foreign key (
		`zoneDirectMovementRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inZoneProductionTypePair`
	add constraint `inChart_inZoneProductionTypePair_FK2` foreign key (
		`zoneIndirectMovementRelID`)
	 references `inChart` (
		`chartID`); 

alter table `inProductionType`
	add constraint `inChart_inProductionType_FK8` foreign key (
		`disPrevalenceRelID`)
	 references `inChart` (
		`chartID`); 

-- Add foreign key constraints to table `outIterationByHerd`.
alter table `outIterationByHerd`
	add constraint `dynHerd_outIterationByHerd_FK1` foreign key (
		`herdID`)
	 references `dynHerd` (
		`herdID`); 

alter table `outIterationByHerd`
	add constraint `readApparentStateCodes_outIterationByHerd_FK1` foreign key (
		`lastApparentStateCode`)
	 references `readApparentStateCodes` (
		`apparentStateCode`); 

alter table `outIterationByHerd`
	add constraint `readStatusCodes_outIterationByHerd_FK1` foreign key (
		`lastStatusCode`)
	 references `readStatusCodes` (
		`statusCode`); 


-- This is the end of the Microsoft Visual Studio generated SQL DDL script.
